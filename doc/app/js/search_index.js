var search_data = {"index":{"searchIndex":["ability","account","activityobserver","admin","dashboardcontroller","groupscontroller","hookscontroller","logscontroller","projectscontroller","resquecontroller","teammemberscontroller","userscontroller","admincontroller","applicationcontroller","applicationdecorator","applicationhelper","attachmentuploader","authority","basecontext","blamecontroller","blobcontroller","commit","commitcontroller","commitdecorator","commitloadcontext","commitscontroller","commitshelper","comparecontroller","dashboardcontroller","deploykeyscontroller","errorscontroller","event","eventdecorator","eventshelper","extractspath","invalidpatherror","filesizevalidator","helper","githost","gitlab","api","apihelpers","applogger","auth","encode","entities","hook","issue","milestone","project","projectmember","projectsnippet","repocommit","repoobject","sshkey","user","userbasic","userlogin","fileeditor","gitlogger","gitolite","accessdenied","gitoliteconfig","pullerror","pusherror","graphcommit","inlinediff","issues","logger","markdown","merge","milestones","projects","satellite","session","theme","users","gitlabmarkdownhelper","grack","auth","group","groupscontroller","helpcontroller","hookscontroller","issue","issuecommonality","classmethods","issueobserver","issuesbulkupdatecontext","issuescontroller","issueshelper","issueslistcontext","key","keyobserver","keyscontroller","labelscontroller","mergerequest","mergerequestobserver","mergerequestscontroller","mergerequestshelper","mergerequestsloadcontext","milestone","milestonescontroller","note","noteobserver","notes","createcontext","loadcontext","notescontroller","noteshelper","notify","omniauthcallbackscontroller","postreceive","profilecontroller","profilehelper","project","projecthook","projectobserver","projectresourcecontroller","projectscontroller","projectshelper","protectedbranch","protectedbranchescontroller","pushevent","pushobserver","redcarpet","render","gitlabhtml","refscontroller","repositoriescontroller","repository","searchcontext","searchcontroller","snippet","snippetscontroller","snippetshelper","staticmodel","classmethods","systemhook","systemhookobserver","systemhookworker","tabhelper","tagshelper","team","teammemberscontroller","testhookcontext","tree","treecontroller","treedecorator","treehelper","user","userobserver","usersproject","usersprojectobserver","votes","webhook","wiki","wikiscontroller","==()","[]()","_indexes_of_changed_lines()","abilities()","abilities()","abilities()","access_denied!()","access_options()","access_roles()","action_name()","active()","active()","add_access()","add_project_abilities()","add_refs()","add_user_id_to_team()","add_user_to_team()","add_users_ids_to_team()","add_users_to_team()","admin_all_repo()","admin_all_repo!()","after_commit()","after_create()","after_create()","after_create()","after_create()","after_create()","after_create()","after_create()","after_create()","after_destroy()","after_destroy()","after_destroy()","after_destroy()","after_destroy()","after_save()","after_save()","after_save()","after_sign_in_path_for()","after_update()","after_update()","all_hooks_fire()","allow_read_for?()","allowed()","allowed?()","allowed_tree_edit?()","app_theme()","apply()","apply_import()","archive()","archive_repo()","assign_ref_vars()","async_execute()","attributes_for_keys()","authbutton()","authenticate!()","authenticate_admin!()","authenticated_as_admin!()","author()","author_email()","author_link()","author_name()","authorize!()","authorize_admin_issue!()","authorize_admin_merge_request!()","authorize_admin_milestone!()","authorize_admin_snippet!()","authorize_code_access!()","authorize_modify_issue!()","authorize_modify_merge_request!()","authorize_modify_snippet!()","authorize_project!()","automerge()","automerge!()","automerge_check()","base_class()","block()","block()","block_code()","branch?()","branch_from()","branch_name()","branch_names()","branch_to()","branches()","branches()","branches_tab_class()","breadcrumbs()","broken_diffs?()","build()","build_commit_note()","build_line_anchor()","bulk_delete()","bulk_import()","bulk_update()","bulk_update()","can?()","can?()","can?()","can_be_merged?()","can_be_merged?()","can_create_group?()","can_create_project?()","can_edit?()","cared_merge_requests()","changed_issue?()","changed_merge_request?()","check_if_can_be_merged()","check_limit()","check_validity!()","clear()","closed?()","closed_event()","commit()","commit()","commit_author()","commit_from()","commit_line_notes()","commit_notes()","commit_to()","commits()","commits()","commits()","commits()","commits_between()","commits_between()","commits_count()","commits_since()","commits_since()","commits_with_refs()","commits_with_refs()","committer_email()","committer_name()","common_notes()","compare()","config()","content_types()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create_by_user()","create_from_omniauth()","create_from_omniauth()","create_repository()","create_status_change_note()","created_at()","css_class_by_id()","current_action?()","current_controller?()","current_ref()","current_user()","data()","define_show_vars()","define_tree_vars()","delete_users_ids_from_team()","description()","design()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy_project()","destroy_project!()","destroy_repository()","destroyed?()","detect_encoding()","determine_action()","dev_access_for?()","dev_tools()","different_committer?()","diffs()","diffs()","discover_default_branch()","downvote?()","downvotes()","downvotes_in_percent()","each_diff_line()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","emoji_autocomplete_source()","empty?()","empty_repo?()","enable_automerge()","error()","event_action_name()","event_image()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute_hooks()","exists?()","expired?()","expires_at()","extract_ref()","failure_message()","feed_summary()","feed_title()","feed_url()","file_name()","file_name()","files()","filter()","find_all_by_branch()","find_for_ldap_auth()","find_for_ldap_auth()","find_free_space()","find_or_first()","find_or_new_for_omniauth()","find_or_new_for_omniauth()","fingerprintable_key()","first_name()","for_commit?()","for_diff_line?()","forbidden!()","format_message()","format_message()","fresh_commits()","fresh_commits()","generate_password()","gfm()","git_error?()","git_host()","git_not_found!()","githost()","gitlab_auth()","gitlab_markdown?()","graph()","gravatar_icon()","group()","grouped_options_refs()","grouper_project_members()","guest_access_for?()","has_commits?()","has_post_receive_file?()","heads()","help()","hexdigest()","history()","history()","http_url_to_repo()","human_state()","identification_type()","identifier()","image_diff_class()","import_team()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index_commits()","info()","invalid?()","is_admin?()","is_assigned?()","is_being_closed?()","is_being_reassigned?()","is_being_reopened?()","is_blob?()","is_deploy_key()","issue()","issue()","issue?()","issue_css_classes()","issue_status_changed_email()","issue_tags()","issues()","issues()","issues_filter()","issues_filtered()","issues_labels()","joined?()","last_activity()","last_activity_date()","last_activity_project()","last_commit()","last_commit()","last_commit()","last_commit_for()","last_deploy?()","last_push_to_non_root?()","ldap()","ldap_enable?()","left?()","lifetime_select_options()","link_title()","link_to_author()","link_to_commit_diff_line_note()","link_to_gfm()","link_to_issue_assignee()","link_to_issue_author()","link_to_merge_request_assignee()","link_to_merge_request_author()","link_to_project()","loading_more_notes?()","loading_new_notes?()","log()","log()","log_info()","log_info()","logs_tree()","mark_as_merged!()","mark_as_unchecked()","mark_as_unmergable()","mark_reserved()","markdown()","markup?()","master_access_for?()","md_ref?()","membership_changed?()","merge!()","merge!()","merge_event()","merge_request()","merge_request()","merge_request?()","merge_requests()","merge_requests()","merged?()","merged?()","method_missing()","method_missing()","milestone()","mode()","module_enabled()","module_enabled()","module_enabled()","module_enabled()","mr_and_commit_notes()","mr_css_classes()","name()","nav_link()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new?()","new_branch?()","new_issue?()","new_issue_email()","new_merge_request?()","new_merge_request_email()","new_mr_path_from_push_event()","new_record?()","new_ref?()","new_user_email()","no_cache_headers()","no_commit_message()","not_allowed!()","not_found!()","not_found!()","note_commit_email()","note_for_main_target?()","note_issue_email()","note_merge_request_email()","note_wall_email()","note_wiki_email()","noteable()","notes()","notify_only_author?()","notify_team()","oauth_active_class()","observe_push()","open?()","open_branches()","open_for()","pages()","paginate()","parent_commit()","parents_count()","participants()","password_update()","path()","path_to_repo()","people()","percent_complete()","perform()","perform()","persisted?()","place_chain()","plain_text_readme?()","post_receive_data()","postprocess()","prev_commit()","prev_commit_id()","preview()","primary_key()","private?()","probably_merged?()","processing()","project()","project_abilities()","project_access_granted_email()","project_access_human()","project_id()","project_ids()","project_ids()","project_issues_filter_path()","project_last_activity()","project_name()","project_tab_class()","project_update()","projects()","projects()","projects_limit_percent()","projects_with_events()","protected_branch?()","public?()","push?()","push_action_name()","push_with_commits?()","raw()","raw()","read_latest()","readme()","reassigned_issue_email()","reassigned_merge_request_email()","recent_push()","ref()","ref_name()","ref_names()","ref_type()","regenerate_from()","reject_blocked!()","reload_code()","reloaded_commits()","reloaded_diffs()","remove_from_team_message()","remove_key()","remove_project()","remove_repository()","render_404()","render_api_error!()","render_tree()","reopened?()","replace_markers()","repo()","repo_access_human()","repo_exists?()","repo_name()","report_access_for?()","repository_masters()","repository_readers()","repository_writers()","request_protocol()","require_non_empty_project()","require_ssh_key?()","reset_access()","reset_private_token()","result()","rm_key()","rm_ref?()","role_access()","root_ref()","root_ref?()","safe_message()","satellite()","saved?()","search()","search()","search()","search()","search()","search()","search_autocomplete_source()","send_notify_mails()","send_reassigned_email()","send_reassigned_email()","set_current_user_for_observers()","set_identifier()","set_key()","set_slug()","short_id()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show_last_push_widget?()","size()","snippet()","sort()","ssh_url_to_repo()","store_dir()","strip_white_space()","switch()","tag?()","tag_list()","tag_name()","tag_names()","tag_path()","tags()","tags()","take_left_leaves()","target_title()","team_member_by_id()","team_member_by_name_or_email()","team_update()","team_update()","team_without_note_author()","test()","test()","title()","to_graph()","to_graph_hash()","to_param()","to_param()","to_param()","to_param()","to_raw()","today?()","token()","tree()","tree_hex_class()","tree_icon()","tree_join()","trigger_post_receive()","unassigned_filter()","unauthorized!()","unblock()","unchecked?()","unique_key()","unmerged_commits()","unmerged_diffs()","up_dir?()","up_dir_path()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update_merge_requests()","update_project()","update_project!()","update_project_config()","update_projects()","update_repository()","update_repository()","update_repository()","update_repository()","update_users_ids_to_role()","upvote?()","upvotes()","upvotes_in_percent()","url_to_repo()","url_to_repo()","user_bulk_import()","user_project()","users()","utf8()","valid?()","valid_diffs?()","valid_push?()","valid_repo?()","validate_branches()","validate_each()","validate_get_request()","validate_post_request()","validates_merge_request()","votes_count()","wall()","web_app_url()","web_url()","wiki_notes()","without_projects()","without_repository_callback()","write_key()","readme_for_app"],"longSearchIndex":["ability","account","activityobserver","admin","admin::dashboardcontroller","admin::groupscontroller","admin::hookscontroller","admin::logscontroller","admin::projectscontroller","admin::resquecontroller","admin::teammemberscontroller","admin::userscontroller","admincontroller","applicationcontroller","applicationdecorator","applicationhelper","attachmentuploader","authority","basecontext","blamecontroller","blobcontroller","commit","commitcontroller","commitdecorator","commitloadcontext","commitscontroller","commitshelper","comparecontroller","dashboardcontroller","deploykeyscontroller","errorscontroller","event","eventdecorator","eventshelper","extractspath","extractspath::invalidpatherror","filesizevalidator","filesizevalidator::helper","githost","gitlab","gitlab::api","gitlab::apihelpers","gitlab::applogger","gitlab::auth","gitlab::encode","gitlab::entities","gitlab::entities::hook","gitlab::entities::issue","gitlab::entities::milestone","gitlab::entities::project","gitlab::entities::projectmember","gitlab::entities::projectsnippet","gitlab::entities::repocommit","gitlab::entities::repoobject","gitlab::entities::sshkey","gitlab::entities::user","gitlab::entities::userbasic","gitlab::entities::userlogin","gitlab::fileeditor","gitlab::gitlogger","gitlab::gitolite","gitlab::gitolite::accessdenied","gitlab::gitoliteconfig","gitlab::gitoliteconfig::pullerror","gitlab::gitoliteconfig::pusherror","gitlab::graphcommit","gitlab::inlinediff","gitlab::issues","gitlab::logger","gitlab::markdown","gitlab::merge","gitlab::milestones","gitlab::projects","gitlab::satellite","gitlab::session","gitlab::theme","gitlab::users","gitlabmarkdownhelper","grack","grack::auth","group","groupscontroller","helpcontroller","hookscontroller","issue","issuecommonality","issuecommonality::classmethods","issueobserver","issuesbulkupdatecontext","issuescontroller","issueshelper","issueslistcontext","key","keyobserver","keyscontroller","labelscontroller","mergerequest","mergerequestobserver","mergerequestscontroller","mergerequestshelper","mergerequestsloadcontext","milestone","milestonescontroller","note","noteobserver","notes","notes::createcontext","notes::loadcontext","notescontroller","noteshelper","notify","omniauthcallbackscontroller","postreceive","profilecontroller","profilehelper","project","projecthook","projectobserver","projectresourcecontroller","projectscontroller","projectshelper","protectedbranch","protectedbranchescontroller","pushevent","pushobserver","redcarpet","redcarpet::render","redcarpet::render::gitlabhtml","refscontroller","repositoriescontroller","repository","searchcontext","searchcontroller","snippet","snippetscontroller","snippetshelper","staticmodel","staticmodel::classmethods","systemhook","systemhookobserver","systemhookworker","tabhelper","tagshelper","team","teammemberscontroller","testhookcontext","tree","treecontroller","treedecorator","treehelper","user","userobserver","usersproject","usersprojectobserver","votes","webhook","wiki","wikiscontroller","staticmodel#==()","staticmodel#[]()","gitlab::inlinediff::_indexes_of_changed_lines()","applicationcontroller#abilities()","basecontext#abilities()","grack::auth#abilities()","applicationcontroller#access_denied!()","project::access_options()","usersproject::access_roles()","event#action_name()","milestone::active()","project::active()","authority#add_access()","applicationcontroller#add_project_abilities()","gitlab::graphcommit#add_refs()","team#add_user_id_to_team()","team#add_user_to_team()","team#add_users_ids_to_team()","team#add_users_to_team()","gitlab::gitoliteconfig#admin_all_repo()","gitlab::gitoliteconfig#admin_all_repo!()","usersprojectobserver#after_commit()","activityobserver#after_create()","issueobserver#after_create()","mergerequestobserver#after_create()","noteobserver#after_create()","projectobserver#after_create()","systemhookobserver#after_create()","userobserver#after_create()","usersprojectobserver#after_create()","keyobserver#after_destroy()","projectobserver#after_destroy()","systemhookobserver#after_destroy()","userobserver#after_destroy()","usersprojectobserver#after_destroy()","activityobserver#after_save()","keyobserver#after_save()","projectobserver#after_save()","applicationcontroller#after_sign_in_path_for()","issueobserver#after_update()","mergerequestobserver#after_update()","systemhook::all_hooks_fire()","authority#allow_read_for?()","ability::allowed()","event#allowed?()","treehelper#allowed_tree_edit?()","applicationhelper#app_theme()","gitlab::gitoliteconfig#apply()","teammemberscontroller#apply_import()","repositoriescontroller#archive()","repository#archive_repo()","extractspath#assign_ref_vars()","systemhook#async_execute()","gitlab::apihelpers#attributes_for_keys()","applicationhelper#authbutton()","gitlab::apihelpers#authenticate!()","admincontroller#authenticate_admin!()","gitlab::apihelpers#authenticated_as_admin!()","event#author()","commit#author_email()","commitdecorator#author_link()","commit#author_name()","gitlab::apihelpers#authorize!()","issuescontroller#authorize_admin_issue!()","mergerequestscontroller#authorize_admin_merge_request!()","milestonescontroller#authorize_admin_milestone!()","snippetscontroller#authorize_admin_snippet!()","applicationcontroller#authorize_code_access!()","issuescontroller#authorize_modify_issue!()","mergerequestscontroller#authorize_modify_merge_request!()","snippetscontroller#authorize_modify_snippet!()","applicationcontroller#authorize_project!()","mergerequestscontroller#automerge()","mergerequest#automerge!()","mergerequestscontroller#automerge_check()","staticmodel::classmethods#base_class()","account#block()","admin::userscontroller#block()","redcarpet::render::gitlabhtml#block_code()","pushevent#branch?()","mergerequestscontroller#branch_from()","pushevent#branch_name()","repository#branch_names()","mergerequestscontroller#branch_to()","repositoriescontroller#branches()","repository#branches()","tabhelper#branches_tab_class()","treedecorator#breadcrumbs()","mergerequest#broken_diffs?()","gitlab::logger::build()","project#build_commit_note()","commitshelper#build_line_anchor()","usersproject::bulk_delete()","usersproject::bulk_import()","issuescontroller#bulk_update()","usersproject::bulk_update()","applicationcontroller#can?()","basecontext#can?()","grack::auth#can?()","gitlab::merge#can_be_merged?()","mergerequest#can_be_merged?()","account#can_create_group?()","account#can_create_project?()","gitlab::fileeditor#can_edit?()","account#cared_merge_requests()","event#changed_issue?()","event#changed_merge_request?()","mergerequest#check_if_can_be_merged()","project#check_limit()","filesizevalidator#check_validity!()","gitlab::satellite#clear()","event#closed?()","mergerequest#closed_event()","protectedbranch#commit()","repository#commit()","note#commit_author()","pushevent#commit_from()","project#commit_line_notes()","project#commit_notes()","pushevent#commit_to()","commit::commits()","mergerequest#commits()","pushevent#commits()","repository#commits()","commit::commits_between()","repository#commits_between()","pushevent#commits_count()","commit::commits_since()","repository#commits_since()","commit::commits_with_refs()","repository#commits_with_refs()","commit#committer_email()","commit#committer_name()","project#common_notes()","commit::compare()","gitlab::gitolite#config()","snippet::content_types()","admin::groupscontroller#create()","admin::hookscontroller#create()","admin::projectscontroller#create()","admin::userscontroller#create()","comparecontroller#create()","deploykeyscontroller#create()","gitlab::satellite#create()","hookscontroller#create()","issuescontroller#create()","keyscontroller#create()","mergerequestscontroller#create()","milestonescontroller#create()","notescontroller#create()","projectscontroller#create()","protectedbranchescontroller#create()","snippetscontroller#create()","teammemberscontroller#create()","wikiscontroller#create()","project::create_by_user()","gitlab::auth#create_from_omniauth()","user::create_from_omniauth()","gitlab::gitolite#create_repository()","note::create_status_change_note()","commit#created_at()","gitlab::theme::css_class_by_id()","applicationhelper#current_action?()","applicationhelper#current_controller?()","grack::auth#current_ref()","gitlab::apihelpers#current_user()","snippet#data()","mergerequestscontroller#define_show_vars()","refscontroller#define_tree_vars()","team#delete_users_ids_from_team()","commitdecorator#description()","profilecontroller#design()","admin::groupscontroller#destroy()","admin::hookscontroller#destroy()","admin::projectscontroller#destroy()","admin::teammemberscontroller#destroy()","admin::userscontroller#destroy()","deploykeyscontroller#destroy()","hookscontroller#destroy()","issuescontroller#destroy()","keyscontroller#destroy()","mergerequestscontroller#destroy()","milestonescontroller#destroy()","notescontroller#destroy()","projectscontroller#destroy()","protectedbranchescontroller#destroy()","snippetscontroller#destroy()","teammemberscontroller#destroy()","wikiscontroller#destroy()","gitlab::gitoliteconfig#destroy_project()","gitlab::gitoliteconfig#destroy_project!()","repository#destroy_repository()","staticmodel#destroyed?()","gitlab::encode#detect_encoding()","event::determine_action()","authority#dev_access_for?()","applicationcontroller#dev_tools()","commit#different_committer?()","mergerequest#diffs()","mergerequestscontroller#diffs()","repository#discover_default_branch()","note#downvote?()","votes#downvotes()","votes#downvotes_in_percent()","commitshelper#each_diff_line()","admin::groupscontroller#edit()","admin::projectscontroller#edit()","admin::teammemberscontroller#edit()","admin::userscontroller#edit()","issuescontroller#edit()","mergerequestscontroller#edit()","milestonescontroller#edit()","projectscontroller#edit()","snippetscontroller#edit()","treecontroller#edit()","wikiscontroller#edit()","applicationhelper#emoji_autocomplete_source()","tree#empty?()","repository#empty_repo?()","gitlab::gitolite#enable_automerge()","gitlab::logger::error()","eventshelper#event_action_name()","eventshelper#event_image()","commitloadcontext#execute()","issuesbulkupdatecontext#execute()","issueslistcontext#execute()","mergerequestsloadcontext#execute()","notes::createcontext#execute()","notes::loadcontext#execute()","searchcontext#execute()","testhookcontext#execute()","webhook#execute()","pushobserver#execute_hooks()","gitlab::satellite#exists?()","snippet#expired?()","milestone#expires_at()","extractspath#extract_ref()","omniauthcallbackscontroller#failure_message()","eventdecorator#feed_summary()","eventdecorator#feed_title()","eventdecorator#feed_url()","gitlab::applogger::file_name()","gitlab::gitlogger::file_name()","projectscontroller#files()","user::filter()","mergerequest::find_all_by_branch()","gitlab::auth#find_for_ldap_auth()","user::find_for_ldap_auth()","gitlab::graphcommit::find_free_space()","commit::find_or_first()","gitlab::auth#find_or_new_for_omniauth()","user::find_or_new_for_omniauth()","key#fingerprintable_key()","account#first_name()","note#for_commit?()","note#for_diff_line?()","gitlab::apihelpers#forbidden!()","gitlab::applogger#format_message()","gitlab::gitlogger#format_message()","commit::fresh_commits()","repository#fresh_commits()","user#generate_password()","gitlab::markdown#gfm()","project#git_error?()","githost#git_host()","applicationcontroller#git_not_found!()","errorscontroller#githost()","user::gitlab_auth()","treehelper#gitlab_markdown?()","projectscontroller#graph()","applicationhelper#gravatar_icon()","groupscontroller#group()","applicationhelper#grouped_options_refs()","projectshelper#grouper_project_members()","authority#guest_access_for?()","repository#has_commits?()","repository#has_post_receive_file?()","repository#heads()","filesizevalidator#help()","applicationhelper#hexdigest()","profilecontroller#history()","wikiscontroller#history()","repository#http_url_to_repo()","mergerequest#human_state()","commitshelper#identification_type()","account#identifier()","commitshelper#image_diff_class()","usersproject::import_team()","admin::dashboardcontroller#index()","admin::groupscontroller#index()","admin::hookscontroller#index()","admin::projectscontroller#index()","admin::userscontroller#index()","comparecontroller#index()","dashboardcontroller#index()","deploykeyscontroller#index()","helpcontroller#index()","hookscontroller#index()","issuescontroller#index()","keyscontroller#index()","labelscontroller#index()","mergerequestscontroller#index()","milestonescontroller#index()","notescontroller#index()","protectedbranchescontroller#index()","snippetscontroller#index()","teammemberscontroller#index()","gitlab::graphcommit::index_commits()","gitlab::logger::info()","tree#invalid?()","account#is_admin?()","issuecommonality#is_assigned?()","issuecommonality#is_being_closed?()","issuecommonality#is_being_reassigned?()","issuecommonality#is_being_reopened?()","tree#is_blob?()","key#is_deploy_key()","event#issue()","issuescontroller#issue()","event#issue?()","issueshelper#issue_css_classes()","notify#issue_status_changed_email()","issueshelper#issue_tags()","dashboardcontroller#issues()","groupscontroller#issues()","issueshelper#issues_filter()","issuescontroller#issues_filtered()","project#issues_labels()","event#joined?()","project#last_activity()","project#last_activity_date()","account#last_activity_project()","applicationhelper#last_commit()","mergerequest#last_commit()","pushevent#last_commit()","repository#last_commit_for()","key#last_deploy?()","pushevent#last_push_to_non_root?()","omniauthcallbackscontroller#ldap()","applicationhelper#ldap_enable?()","event#left?()","snippetshelper#lifetime_select_options()","commitdecorator#link_title()","eventshelper#link_to_author()","noteshelper#link_to_commit_diff_line_note()","gitlabmarkdownhelper#link_to_gfm()","issueshelper#link_to_issue_assignee()","issueshelper#link_to_issue_author()","mergerequestshelper#link_to_merge_request_assignee()","mergerequestshelper#link_to_merge_request_author()","projectshelper#link_to_project()","noteshelper#loading_more_notes?()","noteshelper#loading_new_notes?()","gitlab::auth#log()","gitlab::gitoliteconfig#log()","projectobserver#log_info()","userobserver#log_info()","refscontroller#logs_tree()","mergerequest#mark_as_merged!()","mergerequest#mark_as_unchecked()","mergerequest#mark_as_unmergable()","gitlab::graphcommit::mark_reserved()","gitlabmarkdownhelper#markdown()","treehelper#markup?()","authority#master_access_for?()","pushevent#md_ref?()","event#membership_changed?()","gitlab::merge#merge!()","mergerequest#merge!()","mergerequest#merge_event()","event#merge_request()","mergerequestscontroller#merge_request()","event#merge_request?()","dashboardcontroller#merge_requests()","groupscontroller#merge_requests()","event#merged?()","mergerequest#merged?()","applicationcontroller#method_missing()","gitlab::graphcommit#method_missing()","milestonescontroller#milestone()","snippet#mode()","issuescontroller#module_enabled()","labelscontroller#module_enabled()","mergerequestscontroller#module_enabled()","milestonescontroller#module_enabled()","mergerequest#mr_and_commit_notes()","mergerequestshelper#mr_css_classes()","snippet#name()","tabhelper#nav_link()","admin::groupscontroller#new()","admin::projectscontroller#new()","admin::userscontroller#new()","basecontext::new()","commit::new()","deploykeyscontroller#new()","filesizevalidator::new()","gitlab::fileeditor::new()","gitlab::graphcommit::new()","gitlab::merge::new()","gitlab::satellite::new()","issuescontroller#new()","keyscontroller#new()","mergerequestscontroller#new()","milestonescontroller#new()","projectscontroller#new()","redcarpet::render::gitlabhtml::new()","searchcontext::new()","snippetscontroller#new()","teammemberscontroller#new()","tree::new()","issuecommonality#new?()","pushevent#new_branch?()","event#new_issue?()","notify#new_issue_email()","event#new_merge_request?()","notify#new_merge_request_email()","mergerequestshelper#new_mr_path_from_push_event()","staticmodel#new_record?()","pushevent#new_ref?()","notify#new_user_email()","applicationcontroller#no_cache_headers()","commitdecorator#no_commit_message()","gitlab::apihelpers#not_allowed!()","applicationcontroller#not_found!()","gitlab::apihelpers#not_found!()","notify#note_commit_email()","noteshelper#note_for_main_target?()","notify#note_issue_email()","notify#note_merge_request_email()","notify#note_wall_email()","notify#note_wiki_email()","note#noteable()","notescontroller#notes()","note#notify_only_author?()","noteobserver#notify_team()","profilehelper#oauth_active_class()","pushobserver#observe_push()","mergerequest#open?()","repository#open_branches()","issue::open_for()","wikiscontroller#pages()","gitlab::apihelpers#paginate()","pushevent#parent_commit()","commit#parents_count()","milestone#participants()","profilecontroller#password_update()","gitlab::satellite#path()","repository#path_to_repo()","groupscontroller#people()","milestone#percent_complete()","postreceive::perform()","systemhookworker::perform()","staticmodel#persisted?()","gitlab::graphcommit::place_chain()","treehelper#plain_text_readme?()","pushobserver#post_receive_data()","redcarpet::render::gitlabhtml#postprocess()","commit#prev_commit()","commit#prev_commit_id()","notescontroller#preview()","staticmodel::classmethods#primary_key()","project#private?()","mergerequest#probably_merged?()","gitlab::inlinediff::processing()","applicationcontroller#project()","ability::project_abilities()","notify#project_access_granted_email()","usersproject#project_access_human()","project#project_id()","account#project_ids()","groupscontroller#project_ids()","issueshelper#project_issues_filter_path()","applicationhelper#project_last_activity()","event#project_name()","tabhelper#project_tab_class()","admin::groupscontroller#project_update()","groupscontroller#projects()","key#projects()","account#projects_limit_percent()","account#projects_with_events()","repository#protected_branch?()","project#public?()","event#push?()","pushevent#push_action_name()","pushevent#push_with_commits?()","mergerequestscontroller#raw()","snippetscontroller#raw()","gitlab::logger::read_latest()","treedecorator#readme()","notify#reassigned_issue_email()","notify#reassigned_merge_request_email()","account#recent_push()","refscontroller#ref()","pushevent#ref_name()","repository#ref_names()","pushevent#ref_type()","wiki::regenerate_from()","applicationcontroller#reject_blocked!()","mergerequest#reload_code()","mergerequest#reloaded_commits()","mergerequest#reloaded_diffs()","projectshelper#remove_from_team_message()","gitlab::gitolite#remove_key()","admin::groupscontroller#remove_project()","gitlab::gitolite#remove_repository()","applicationcontroller#render_404()","gitlab::apihelpers#render_api_error!()","treehelper#render_tree()","event#reopened?()","gitlab::inlinediff::replace_markers()","repository#repo()","usersproject#repo_access_human()","repository#repo_exists?()","project#repo_name()","authority#report_access_for?()","authority#repository_masters()","authority#repository_readers()","authority#repository_writers()","applicationhelper#request_protocol()","applicationcontroller#require_non_empty_project()","account#require_ssh_key?()","authority#reset_access()","profilecontroller#reset_private_token()","searchcontext#result()","gitlab::gitoliteconfig#rm_key()","pushevent#rm_ref?()","usersproject#role_access()","repository#root_ref()","repository#root_ref?()","commit#safe_message()","repository#satellite()","project#saved?()","group::search()","groupscontroller#search()","issuecommonality::classmethods#search()","issuescontroller#search()","project::search()","user::search()","applicationhelper#search_autocomplete_source()","noteobserver#send_notify_mails()","issueobserver#send_reassigned_email()","mergerequestobserver#send_reassigned_email()","applicationcontroller#set_current_user_for_observers()","key#set_identifier()","gitlab::gitolite#set_key()","wiki#set_slug()","commit#short_id()","admin::groupscontroller#show()","admin::projectscontroller#show()","admin::resquecontroller#show()","admin::userscontroller#show()","blamecontroller#show()","blobcontroller#show()","commitcontroller#show()","commitscontroller#show()","comparecontroller#show()","deploykeyscontroller#show()","groupscontroller#show()","issuescontroller#show()","keyscontroller#show()","mergerequestscontroller#show()","milestonescontroller#show()","profilecontroller#show()","projectscontroller#show()","repositoriescontroller#show()","searchcontroller#show()","snippetscontroller#show()","teammemberscontroller#show()","treecontroller#show()","wikiscontroller#show()","applicationhelper#show_last_push_widget?()","snippet#size()","snippetscontroller#snippet()","issuescontroller#sort()","repository#ssh_url_to_repo()","attachmentuploader#store_dir()","key#strip_white_space()","refscontroller#switch()","pushevent#tag?()","tagshelper#tag_list()","pushevent#tag_name()","repository#tag_names()","tagshelper#tag_path()","repositoriescontroller#tags()","repository#tags()","gitlab::graphcommit::take_left_leaves()","event#target_title()","team#team_member_by_id()","team#team_member_by_name_or_email()","admin::projectscontroller#team_update()","admin::userscontroller#team_update()","noteobserver#team_without_note_author()","admin::hookscontroller#test()","hookscontroller#test()","commitdecorator#title()","gitlab::graphcommit::to_graph()","gitlab::graphcommit#to_graph_hash()","group#to_param()","project#to_param()","staticmodel#to_param()","wiki#to_param()","mergerequest#to_raw()","issuecommonality#today?()","profilecontroller#token()","repository#tree()","treehelper#tree_hex_class()","treehelper#tree_icon()","treehelper#tree_join()","pushobserver#trigger_post_receive()","issueshelper#unassigned_filter()","gitlab::apihelpers#unauthorized!()","admin::userscontroller#unblock()","mergerequest#unchecked?()","key#unique_key()","mergerequest#unmerged_commits()","mergerequest#unmerged_diffs()","treedecorator#up_dir?()","treedecorator#up_dir_path()","admin::groupscontroller#update()","admin::projectscontroller#update()","admin::teammemberscontroller#update()","admin::userscontroller#update()","gitlab::fileeditor#update()","issuescontroller#update()","mergerequestscontroller#update()","milestonescontroller#update()","profilecontroller#update()","projectscontroller#update()","snippetscontroller#update()","teammemberscontroller#update()","treecontroller#update()","pushobserver#update_merge_requests()","gitlab::gitoliteconfig#update_project()","gitlab::gitoliteconfig#update_project!()","gitlab::gitoliteconfig#update_project_config()","gitlab::gitoliteconfig#update_projects()","gitlab::gitolite#update_repository()","protectedbranch#update_repository()","repository#update_repository()","usersproject#update_repository()","team#update_users_ids_to_role()","note#upvote?()","votes#upvotes()","votes#upvotes_in_percent()","gitlab::gitolite#url_to_repo()","repository#url_to_repo()","usersproject::user_bulk_import()","gitlab::apihelpers#user_project()","group#users()","gitlab::encode#utf8()","grack::auth#valid?()","mergerequest#valid_diffs?()","pushevent#valid_push?()","repository#valid_repo?()","mergerequest#validate_branches()","filesizevalidator#validate_each()","grack::auth#validate_get_request()","grack::auth#validate_post_request()","mergerequestscontroller#validates_merge_request()","votes#votes_count()","projectscontroller#wall()","applicationhelper#web_app_url()","project#web_url()","project#wiki_notes()","user::without_projects()","usersproject::without_repository_callback()","gitlab::gitoliteconfig#write_key()",""],"info":[["Ability","","Ability.html","",""],["Account","","Account.html","",""],["ActivityObserver","","ActivityObserver.html","",""],["Admin","","Admin.html","",""],["Admin::DashboardController","","Admin/DashboardController.html","",""],["Admin::GroupsController","","Admin/GroupsController.html","",""],["Admin::HooksController","","Admin/HooksController.html","",""],["Admin::LogsController","","Admin/LogsController.html","",""],["Admin::ProjectsController","","Admin/ProjectsController.html","",""],["Admin::ResqueController","","Admin/ResqueController.html","",""],["Admin::TeamMembersController","","Admin/TeamMembersController.html","",""],["Admin::UsersController","","Admin/UsersController.html","",""],["AdminController","","AdminController.html","","<p>Provides a base class for Admin controllers to subclass\n<p>Automatically sets the layout and ensures an administrator …\n"],["ApplicationController","","ApplicationController.html","",""],["ApplicationDecorator","","ApplicationDecorator.html","",""],["ApplicationHelper","","ApplicationHelper.html","",""],["AttachmentUploader","","AttachmentUploader.html","",""],["Authority","","Authority.html","",""],["BaseContext","","BaseContext.html","",""],["BlameController","","BlameController.html","","<p>Controller for viewing a file’s blame\n"],["BlobController","","BlobController.html","","<p>Controller for viewing a file’s blame\n"],["Commit","","Commit.html","",""],["CommitController","","CommitController.html","","<p>Controller for a specific Commit\n<p>Not to be confused with CommitsController, plural.\n"],["CommitDecorator","","CommitDecorator.html","",""],["CommitLoadContext","","CommitLoadContext.html","",""],["CommitsController","","CommitsController.html","",""],["CommitsHelper","","CommitsHelper.html","",""],["CompareController","","CompareController.html","",""],["DashboardController","","DashboardController.html","",""],["DeployKeysController","","DeployKeysController.html","",""],["ErrorsController","","ErrorsController.html","",""],["Event","","Event.html","",""],["EventDecorator","","EventDecorator.html","",""],["EventsHelper","","EventsHelper.html","",""],["ExtractsPath","","ExtractsPath.html","","<p>Module providing methods for dealing with separating a tree-ish string and\na file path string when combined …\n"],["ExtractsPath::InvalidPathError","","ExtractsPath/InvalidPathError.html","","<p>Raised when given an invalid file path\n"],["FileSizeValidator","","FileSizeValidator.html","",""],["FileSizeValidator::Helper","","FileSizeValidator/Helper.html","",""],["GitHost","","GitHost.html","",""],["Gitlab","","Gitlab.html","",""],["Gitlab::API","","Gitlab/API.html","",""],["Gitlab::APIHelpers","","Gitlab/APIHelpers.html","",""],["Gitlab::AppLogger","","Gitlab/AppLogger.html","",""],["Gitlab::Auth","","Gitlab/Auth.html","",""],["Gitlab::Encode","","Gitlab/Encode.html","",""],["Gitlab::Entities","","Gitlab/Entities.html","",""],["Gitlab::Entities::Hook","","Gitlab/Entities/Hook.html","",""],["Gitlab::Entities::Issue","","Gitlab/Entities/Issue.html","",""],["Gitlab::Entities::Milestone","","Gitlab/Entities/Milestone.html","",""],["Gitlab::Entities::Project","","Gitlab/Entities/Project.html","",""],["Gitlab::Entities::ProjectMember","","Gitlab/Entities/ProjectMember.html","",""],["Gitlab::Entities::ProjectSnippet","","Gitlab/Entities/ProjectSnippet.html","",""],["Gitlab::Entities::RepoCommit","","Gitlab/Entities/RepoCommit.html","",""],["Gitlab::Entities::RepoObject","","Gitlab/Entities/RepoObject.html","",""],["Gitlab::Entities::SSHKey","","Gitlab/Entities/SSHKey.html","",""],["Gitlab::Entities::User","","Gitlab/Entities/User.html","",""],["Gitlab::Entities::UserBasic","","Gitlab/Entities/UserBasic.html","",""],["Gitlab::Entities::UserLogin","","Gitlab/Entities/UserLogin.html","",""],["Gitlab::FileEditor","","Gitlab/FileEditor.html","","<p>GitLab file editor\n<p>It gives you ability to make changes to files &amp; commit this changes\nfrom GitLab …\n"],["Gitlab::GitLogger","","Gitlab/GitLogger.html","",""],["Gitlab::Gitolite","","Gitlab/Gitolite.html","",""],["Gitlab::Gitolite::AccessDenied","","Gitlab/Gitolite/AccessDenied.html","",""],["Gitlab::GitoliteConfig","","Gitlab/GitoliteConfig.html","",""],["Gitlab::GitoliteConfig::PullError","","Gitlab/GitoliteConfig/PullError.html","",""],["Gitlab::GitoliteConfig::PushError","","Gitlab/GitoliteConfig/PushError.html","",""],["Gitlab::GraphCommit","","Gitlab/GraphCommit.html","",""],["Gitlab::InlineDiff","","Gitlab/InlineDiff.html","",""],["Gitlab::Issues","","Gitlab/Issues.html","","<p>Issues API\n"],["Gitlab::Logger","","Gitlab/Logger.html","",""],["Gitlab::Markdown","","Gitlab/Markdown.html","","<p>Custom parser for GitLab-flavored Markdown\n<p>It replaces references in the text with links to the appropriate …\n"],["Gitlab::Merge","","Gitlab/Merge.html","",""],["Gitlab::Milestones","","Gitlab/Milestones.html","","<p>Milestones API\n"],["Gitlab::Projects","","Gitlab/Projects.html","","<p>Projects API\n"],["Gitlab::Satellite","","Gitlab/Satellite.html","",""],["Gitlab::Session","","Gitlab/Session.html","","<p>Users API\n"],["Gitlab::Theme","","Gitlab/Theme.html","",""],["Gitlab::Users","","Gitlab/Users.html","","<p>Users API\n"],["GitlabMarkdownHelper","","GitlabMarkdownHelper.html","",""],["Grack","","Grack.html","",""],["Grack::Auth","","Grack/Auth.html","",""],["Group","","Group.html","",""],["GroupsController","","GroupsController.html","",""],["HelpController","","HelpController.html","",""],["HooksController","","HooksController.html","",""],["Issue","","Issue.html","",""],["IssueCommonality","","IssueCommonality.html","","<p>Contains common functionality shared between Issues and MergeRequests\n"],["IssueCommonality::ClassMethods","","IssueCommonality/ClassMethods.html","",""],["IssueObserver","","IssueObserver.html","",""],["IssuesBulkUpdateContext","","IssuesBulkUpdateContext.html","",""],["IssuesController","","IssuesController.html","",""],["IssuesHelper","","IssuesHelper.html","",""],["IssuesListContext","","IssuesListContext.html","",""],["Key","","Key.html","",""],["KeyObserver","","KeyObserver.html","",""],["KeysController","","KeysController.html","",""],["LabelsController","","LabelsController.html","",""],["MergeRequest","","MergeRequest.html","",""],["MergeRequestObserver","","MergeRequestObserver.html","",""],["MergeRequestsController","","MergeRequestsController.html","",""],["MergeRequestsHelper","","MergeRequestsHelper.html","",""],["MergeRequestsLoadContext","","MergeRequestsLoadContext.html","",""],["Milestone","","Milestone.html","",""],["MilestonesController","","MilestonesController.html","",""],["Note","","Note.html","",""],["NoteObserver","","NoteObserver.html","",""],["Notes","","Notes.html","",""],["Notes::CreateContext","","Notes/CreateContext.html","",""],["Notes::LoadContext","","Notes/LoadContext.html","",""],["NotesController","","NotesController.html","",""],["NotesHelper","","NotesHelper.html","",""],["Notify","","Notify.html","",""],["OmniauthCallbacksController","","OmniauthCallbacksController.html","",""],["PostReceive","","PostReceive.html","",""],["ProfileController","","ProfileController.html","",""],["ProfileHelper","","ProfileHelper.html","",""],["Project","","Project.html","",""],["ProjectHook","","ProjectHook.html","",""],["ProjectObserver","","ProjectObserver.html","",""],["ProjectResourceController","","ProjectResourceController.html","",""],["ProjectsController","","ProjectsController.html","",""],["ProjectsHelper","","ProjectsHelper.html","",""],["ProtectedBranch","","ProtectedBranch.html","",""],["ProtectedBranchesController","","ProtectedBranchesController.html","",""],["PushEvent","","PushEvent.html","",""],["PushObserver","","PushObserver.html","","<p>Includes methods for handling Git Push events\n<p>Triggered by PostReceive job\n"],["Redcarpet","","Redcarpet.html","",""],["Redcarpet::Render","","Redcarpet/Render.html","",""],["Redcarpet::Render::GitlabHTML","","Redcarpet/Render/GitlabHTML.html","",""],["RefsController","","RefsController.html","",""],["RepositoriesController","","RepositoriesController.html","",""],["Repository","","Repository.html","",""],["SearchContext","","SearchContext.html","",""],["SearchController","","SearchController.html","",""],["Snippet","","Snippet.html","",""],["SnippetsController","","SnippetsController.html","",""],["SnippetsHelper","","SnippetsHelper.html","",""],["StaticModel","","StaticModel.html","","<p>Provides an ActiveRecord-like interface to a model whose data is not\npersisted to a database.\n"],["StaticModel::ClassMethods","","StaticModel/ClassMethods.html","",""],["SystemHook","","SystemHook.html","",""],["SystemHookObserver","","SystemHookObserver.html","",""],["SystemHookWorker","","SystemHookWorker.html","",""],["TabHelper","","TabHelper.html","",""],["TagsHelper","","TagsHelper.html","",""],["Team","","Team.html","",""],["TeamMembersController","","TeamMembersController.html","",""],["TestHookContext","","TestHookContext.html","",""],["Tree","","Tree.html","",""],["TreeController","","TreeController.html","","<p>Controller for viewing a repository’s file structure\n"],["TreeDecorator","","TreeDecorator.html","",""],["TreeHelper","","TreeHelper.html","",""],["User","","User.html","",""],["UserObserver","","UserObserver.html","",""],["UsersProject","","UsersProject.html","",""],["UsersProjectObserver","","UsersProjectObserver.html","",""],["Votes","","Votes.html","",""],["WebHook","","WebHook.html","",""],["Wiki","","Wiki.html","",""],["WikisController","","WikisController.html","",""],["==","StaticModel","StaticModel.html#method-i-3D-3D","(other)",""],["[]","StaticModel","StaticModel.html#method-i-5B-5D","(key)","<p>Used by AR for fetching attributes\n<p>Pass it along if we respond to it.\n"],["_indexes_of_changed_lines","Gitlab::InlineDiff","Gitlab/InlineDiff.html#method-c-_indexes_of_changed_lines","(diff_arr)",""],["abilities","ApplicationController","ApplicationController.html#method-i-abilities","()",""],["abilities","BaseContext","BaseContext.html#method-i-abilities","()",""],["abilities","Grack::Auth","Grack/Auth.html#method-i-abilities","()",""],["access_denied!","ApplicationController","ApplicationController.html#method-i-access_denied-21","()",""],["access_options","Project","Project.html#method-c-access_options","()",""],["access_roles","UsersProject","UsersProject.html#method-c-access_roles","()",""],["action_name","Event","Event.html#method-i-action_name","()",""],["active","Milestone","Milestone.html#method-c-active","()",""],["active","Project","Project.html#method-c-active","()",""],["add_access","Authority","Authority.html#method-i-add_access","(user, *access)","<p>Compatible with all access rights Should be rewrited for new access rights\n"],["add_project_abilities","ApplicationController","ApplicationController.html#method-i-add_project_abilities","()",""],["add_refs","Gitlab::GraphCommit","Gitlab/GraphCommit.html#method-i-add_refs","(ref_cache, repo)",""],["add_user_id_to_team","Team","Team.html#method-i-add_user_id_to_team","(user_id, access_role)","<p>Add user to project with passed access role by user id\n"],["add_user_to_team","Team","Team.html#method-i-add_user_to_team","(user, access_role)","<p>Add user to project with passed access role\n"],["add_users_ids_to_team","Team","Team.html#method-i-add_users_ids_to_team","(users_ids, access_role)","<p>Add multiple users to project with same access role by user ids\n"],["add_users_to_team","Team","Team.html#method-i-add_users_to_team","(users, access_role)","<p>Add multiple users to project with same access role\n"],["admin_all_repo","Gitlab::GitoliteConfig","Gitlab/GitoliteConfig.html#method-i-admin_all_repo","()","<p>Enable access to all repos for gitolite admin. We use it for accept merge\nrequest feature\n"],["admin_all_repo!","Gitlab::GitoliteConfig","Gitlab/GitoliteConfig.html#method-i-admin_all_repo-21","()",""],["after_commit","UsersProjectObserver","UsersProjectObserver.html#method-i-after_commit","(users_project)",""],["after_create","ActivityObserver","ActivityObserver.html#method-i-after_create","(record)",""],["after_create","IssueObserver","IssueObserver.html#method-i-after_create","(issue)",""],["after_create","MergeRequestObserver","MergeRequestObserver.html#method-i-after_create","(merge_request)",""],["after_create","NoteObserver","NoteObserver.html#method-i-after_create","(note)",""],["after_create","ProjectObserver","ProjectObserver.html#method-i-after_create","(project)",""],["after_create","SystemHookObserver","SystemHookObserver.html#method-i-after_create","(model)",""],["after_create","UserObserver","UserObserver.html#method-i-after_create","(user)",""],["after_create","UsersProjectObserver","UsersProjectObserver.html#method-i-after_create","(users_project)",""],["after_destroy","KeyObserver","KeyObserver.html#method-i-after_destroy","(key)",""],["after_destroy","ProjectObserver","ProjectObserver.html#method-i-after_destroy","(project)",""],["after_destroy","SystemHookObserver","SystemHookObserver.html#method-i-after_destroy","(model)",""],["after_destroy","UserObserver","UserObserver.html#method-i-after_destroy","(user)",""],["after_destroy","UsersProjectObserver","UsersProjectObserver.html#method-i-after_destroy","(users_project)",""],["after_save","ActivityObserver","ActivityObserver.html#method-i-after_save","(record)",""],["after_save","KeyObserver","KeyObserver.html#method-i-after_save","(key)",""],["after_save","ProjectObserver","ProjectObserver.html#method-i-after_save","(project)",""],["after_sign_in_path_for","ApplicationController","ApplicationController.html#method-i-after_sign_in_path_for","(resource)",""],["after_update","IssueObserver","IssueObserver.html#method-i-after_update","(issue)",""],["after_update","MergeRequestObserver","MergeRequestObserver.html#method-i-after_update","(merge_request)",""],["all_hooks_fire","SystemHook","SystemHook.html#method-c-all_hooks_fire","(data)",""],["allow_read_for?","Authority","Authority.html#method-i-allow_read_for-3F","(user)",""],["allowed","Ability","Ability.html#method-c-allowed","(object, subject)",""],["allowed?","Event","Event.html#method-i-allowed-3F","()","<p>Next events currently enabled for system\n\n<pre>- push\n- new issue\n- merge request</pre>\n"],["allowed_tree_edit?","TreeHelper","TreeHelper.html#method-i-allowed_tree_edit-3F","()",""],["app_theme","ApplicationHelper","ApplicationHelper.html#method-i-app_theme","()",""],["apply","Gitlab::GitoliteConfig","Gitlab/GitoliteConfig.html#method-i-apply","()",""],["apply_import","TeamMembersController","TeamMembersController.html#method-i-apply_import","()",""],["archive","RepositoriesController","RepositoriesController.html#method-i-archive","()",""],["archive_repo","Repository","Repository.html#method-i-archive_repo","(ref)","<p>Archive Project to .tar.gz\n<p>Already packed repo archives stored at\napp_root/tmp/repositories/project_name/project_name-commit-id.tag.gz …\n"],["assign_ref_vars","ExtractsPath","ExtractsPath.html#method-i-assign_ref_vars","()","<p>Assigns common instance variables for views working with Git tree-ish\nobjects\n<p>Assignments are:\n<p>@id     …\n"],["async_execute","SystemHook","SystemHook.html#method-i-async_execute","(data)",""],["attributes_for_keys","Gitlab::APIHelpers","Gitlab/APIHelpers.html#method-i-attributes_for_keys","(keys)",""],["authbutton","ApplicationHelper","ApplicationHelper.html#method-i-authbutton","(provider, size = 64)",""],["authenticate!","Gitlab::APIHelpers","Gitlab/APIHelpers.html#method-i-authenticate-21","()",""],["authenticate_admin!","AdminController","AdminController.html#method-i-authenticate_admin-21","()",""],["authenticated_as_admin!","Gitlab::APIHelpers","Gitlab/APIHelpers.html#method-i-authenticated_as_admin-21","()",""],["author","Event","Event.html#method-i-author","()",""],["author_email","Commit","Commit.html#method-i-author_email","()",""],["author_link","CommitDecorator","CommitDecorator.html#method-i-author_link","(options)","<p>Returns a link to the commit author. If the author has a matching user and\nis a member of the current …\n"],["author_name","Commit","Commit.html#method-i-author_name","()",""],["authorize!","Gitlab::APIHelpers","Gitlab/APIHelpers.html#method-i-authorize-21","(action, subject)",""],["authorize_admin_issue!","IssuesController","IssuesController.html#method-i-authorize_admin_issue-21","()",""],["authorize_admin_merge_request!","MergeRequestsController","MergeRequestsController.html#method-i-authorize_admin_merge_request-21","()",""],["authorize_admin_milestone!","MilestonesController","MilestonesController.html#method-i-authorize_admin_milestone-21","()",""],["authorize_admin_snippet!","SnippetsController","SnippetsController.html#method-i-authorize_admin_snippet-21","()",""],["authorize_code_access!","ApplicationController","ApplicationController.html#method-i-authorize_code_access-21","()",""],["authorize_modify_issue!","IssuesController","IssuesController.html#method-i-authorize_modify_issue-21","()",""],["authorize_modify_merge_request!","MergeRequestsController","MergeRequestsController.html#method-i-authorize_modify_merge_request-21","()",""],["authorize_modify_snippet!","SnippetsController","SnippetsController.html#method-i-authorize_modify_snippet-21","()",""],["authorize_project!","ApplicationController","ApplicationController.html#method-i-authorize_project-21","(action)",""],["automerge","MergeRequestsController","MergeRequestsController.html#method-i-automerge","()",""],["automerge!","MergeRequest","MergeRequest.html#method-i-automerge-21","(current_user)",""],["automerge_check","MergeRequestsController","MergeRequestsController.html#method-i-automerge_check","()",""],["base_class","StaticModel::ClassMethods","StaticModel/ClassMethods.html#method-i-base_class","()","<p>Used by ActiveRecord’s polymorphic association to set object_type\n"],["block","Account","Account.html#method-i-block","()","<p>Remove user from all projects and set blocked attribute to true\n"],["block","Admin::UsersController","Admin/UsersController.html#method-i-block","()",""],["block_code","Redcarpet::Render::GitlabHTML","Redcarpet/Render/GitlabHTML.html#method-i-block_code","(code, language)",""],["branch?","PushEvent","PushEvent.html#method-i-branch-3F","()",""],["branch_from","MergeRequestsController","MergeRequestsController.html#method-i-branch_from","()",""],["branch_name","PushEvent","PushEvent.html#method-i-branch_name","()",""],["branch_names","Repository","Repository.html#method-i-branch_names","()","<p>Returns an Array of branch names\n"],["branch_to","MergeRequestsController","MergeRequestsController.html#method-i-branch_to","()",""],["branches","RepositoriesController","RepositoriesController.html#method-i-branches","()",""],["branches","Repository","Repository.html#method-i-branches","()","<p>Returns an Array of Branches\n"],["branches_tab_class","TabHelper","TabHelper.html#method-i-branches_tab_class","()",""],["breadcrumbs","TreeDecorator","TreeDecorator.html#method-i-breadcrumbs","(max_links = 2)",""],["broken_diffs?","MergeRequest","MergeRequest.html#method-i-broken_diffs-3F","()",""],["build","Gitlab::Logger","Gitlab/Logger.html#method-c-build","()",""],["build_commit_note","Project","Project.html#method-i-build_commit_note","(commit)",""],["build_line_anchor","CommitsHelper","CommitsHelper.html#method-i-build_line_anchor","(index, line_new, line_old)",""],["bulk_delete","UsersProject","UsersProject.html#method-c-bulk_delete","(project, user_ids)",""],["bulk_import","UsersProject","UsersProject.html#method-c-bulk_import","(project, user_ids, project_access)",""],["bulk_update","IssuesController","IssuesController.html#method-i-bulk_update","()",""],["bulk_update","UsersProject","UsersProject.html#method-c-bulk_update","(project, user_ids, project_access)",""],["can?","ApplicationController","ApplicationController.html#method-i-can-3F","(object, action, subject)",""],["can?","BaseContext","BaseContext.html#method-i-can-3F","(object, action, subject)",""],["can?","Grack::Auth","Grack/Auth.html#method-i-can-3F","(object, action, subject)",""],["can_be_merged?","Gitlab::Merge","Gitlab/Merge.html#method-i-can_be_merged-3F","()",""],["can_be_merged?","MergeRequest","MergeRequest.html#method-i-can_be_merged-3F","()",""],["can_create_group?","Account","Account.html#method-i-can_create_group-3F","()",""],["can_create_project?","Account","Account.html#method-i-can_create_project-3F","()",""],["can_edit?","Gitlab::FileEditor","Gitlab/FileEditor.html#method-i-can_edit-3F","(path, last_commit)",""],["cared_merge_requests","Account","Account.html#method-i-cared_merge_requests","()",""],["changed_issue?","Event","Event.html#method-i-changed_issue-3F","()",""],["changed_merge_request?","Event","Event.html#method-i-changed_merge_request-3F","()",""],["check_if_can_be_merged","MergeRequest","MergeRequest.html#method-i-check_if_can_be_merged","()",""],["check_limit","Project","Project.html#method-i-check_limit","()",""],["check_validity!","FileSizeValidator","FileSizeValidator.html#method-i-check_validity-21","()",""],["clear","Gitlab::Satellite","Gitlab/Satellite.html#method-i-clear","()","<p>will be deleted all branches except PARKING_BRANCH\n"],["closed?","Event","Event.html#method-i-closed-3F","()",""],["closed_event","MergeRequest","MergeRequest.html#method-i-closed_event","()",""],["commit","ProtectedBranch","ProtectedBranch.html#method-i-commit","()",""],["commit","Repository","Repository.html#method-i-commit","(commit_id = nil)",""],["commit_author","Note","Note.html#method-i-commit_author","()",""],["commit_from","PushEvent","PushEvent.html#method-i-commit_from","()",""],["commit_line_notes","Project","Project.html#method-i-commit_line_notes","(commit)",""],["commit_notes","Project","Project.html#method-i-commit_notes","(commit)",""],["commit_to","PushEvent","PushEvent.html#method-i-commit_to","()",""],["commits","Commit","Commit.html#method-c-commits","(repo, ref, path = nil, limit = nil, offset = nil)",""],["commits","MergeRequest","MergeRequest.html#method-i-commits","()",""],["commits","PushEvent","PushEvent.html#method-i-commits","()","<p>Max 20 commits from push DESC\n"],["commits","Repository","Repository.html#method-i-commits","(ref, path = nil, limit = nil, offset = nil)",""],["commits_between","Commit","Commit.html#method-c-commits_between","(repo, from, to)",""],["commits_between","Repository","Repository.html#method-i-commits_between","(from, to)",""],["commits_count","PushEvent","PushEvent.html#method-i-commits_count","()",""],["commits_since","Commit","Commit.html#method-c-commits_since","(repo, date)",""],["commits_since","Repository","Repository.html#method-i-commits_since","(date)",""],["commits_with_refs","Commit","Commit.html#method-c-commits_with_refs","(repo, n = 20)",""],["commits_with_refs","Repository","Repository.html#method-i-commits_with_refs","(n = 20)",""],["committer_email","Commit","Commit.html#method-i-committer_email","()",""],["committer_name","Commit","Commit.html#method-i-committer_name","()",""],["common_notes","Project","Project.html#method-i-common_notes","()",""],["compare","Commit","Commit.html#method-c-compare","(project, from, to)",""],["config","Gitlab::Gitolite","Gitlab/Gitolite.html#method-i-config","()",""],["content_types","Snippet","Snippet.html#method-c-content_types","()",""],["create","Admin::GroupsController","Admin/GroupsController.html#method-i-create","()",""],["create","Admin::HooksController","Admin/HooksController.html#method-i-create","()",""],["create","Admin::ProjectsController","Admin/ProjectsController.html#method-i-create","()",""],["create","Admin::UsersController","Admin/UsersController.html#method-i-create","()",""],["create","CompareController","CompareController.html#method-i-create","()",""],["create","DeployKeysController","DeployKeysController.html#method-i-create","()",""],["create","Gitlab::Satellite","Gitlab/Satellite.html#method-i-create","()",""],["create","HooksController","HooksController.html#method-i-create","()",""],["create","IssuesController","IssuesController.html#method-i-create","()",""],["create","KeysController","KeysController.html#method-i-create","()",""],["create","MergeRequestsController","MergeRequestsController.html#method-i-create","()",""],["create","MilestonesController","MilestonesController.html#method-i-create","()",""],["create","NotesController","NotesController.html#method-i-create","()",""],["create","ProjectsController","ProjectsController.html#method-i-create","()",""],["create","ProtectedBranchesController","ProtectedBranchesController.html#method-i-create","()",""],["create","SnippetsController","SnippetsController.html#method-i-create","()",""],["create","TeamMembersController","TeamMembersController.html#method-i-create","()",""],["create","WikisController","WikisController.html#method-i-create","()",""],["create_by_user","Project","Project.html#method-c-create_by_user","(params, user)",""],["create_from_omniauth","Gitlab::Auth","Gitlab/Auth.html#method-i-create_from_omniauth","(auth, ldap = false)",""],["create_from_omniauth","User","User.html#method-c-create_from_omniauth","(auth, ldap = false)",""],["create_repository","Gitlab::Gitolite","Gitlab/Gitolite.html#method-i-create_repository","(project)",""],["create_status_change_note","Note","Note.html#method-c-create_status_change_note","(noteable, author, status)",""],["created_at","Commit","Commit.html#method-i-created_at","()",""],["css_class_by_id","Gitlab::Theme","Gitlab/Theme.html#method-c-css_class_by_id","(id)",""],["current_action?","ApplicationHelper","ApplicationHelper.html#method-i-current_action-3F","(*args)","<p>Check if a partcular action is the current one\n<p>args - One or more action names to check\n<p>Examples\n"],["current_controller?","ApplicationHelper","ApplicationHelper.html#method-i-current_controller-3F","(*args)","<p>Check if a particular controller is the current one\n<p>args - One or more controller names to check\n<p>Examples …\n"],["current_ref","Grack::Auth","Grack/Auth.html#method-i-current_ref","()",""],["current_user","Gitlab::APIHelpers","Gitlab/APIHelpers.html#method-i-current_user","()",""],["data","Snippet","Snippet.html#method-i-data","()",""],["define_show_vars","MergeRequestsController","MergeRequestsController.html#method-i-define_show_vars","()",""],["define_tree_vars","RefsController","RefsController.html#method-i-define_tree_vars","()",""],["delete_users_ids_from_team","Team","Team.html#method-i-delete_users_ids_from_team","(users_ids)","<p>Delete multiple users from project by user ids\n"],["description","CommitDecorator","CommitDecorator.html#method-i-description","()","<p>Returns the commits description\n<p>cut off, ellipses (`&amp;hellp;`) are prepended to the commit message. …\n"],["design","ProfileController","ProfileController.html#method-i-design","()",""],["destroy","Admin::GroupsController","Admin/GroupsController.html#method-i-destroy","()",""],["destroy","Admin::HooksController","Admin/HooksController.html#method-i-destroy","()",""],["destroy","Admin::ProjectsController","Admin/ProjectsController.html#method-i-destroy","()",""],["destroy","Admin::TeamMembersController","Admin/TeamMembersController.html#method-i-destroy","()",""],["destroy","Admin::UsersController","Admin/UsersController.html#method-i-destroy","()",""],["destroy","DeployKeysController","DeployKeysController.html#method-i-destroy","()",""],["destroy","HooksController","HooksController.html#method-i-destroy","()",""],["destroy","IssuesController","IssuesController.html#method-i-destroy","()",""],["destroy","KeysController","KeysController.html#method-i-destroy","()",""],["destroy","MergeRequestsController","MergeRequestsController.html#method-i-destroy","()",""],["destroy","MilestonesController","MilestonesController.html#method-i-destroy","()",""],["destroy","NotesController","NotesController.html#method-i-destroy","()",""],["destroy","ProjectsController","ProjectsController.html#method-i-destroy","()",""],["destroy","ProtectedBranchesController","ProtectedBranchesController.html#method-i-destroy","()",""],["destroy","SnippetsController","SnippetsController.html#method-i-destroy","()",""],["destroy","TeamMembersController","TeamMembersController.html#method-i-destroy","()",""],["destroy","WikisController","WikisController.html#method-i-destroy","()",""],["destroy_project","Gitlab::GitoliteConfig","Gitlab/GitoliteConfig.html#method-i-destroy_project","(project)",""],["destroy_project!","Gitlab::GitoliteConfig","Gitlab/GitoliteConfig.html#method-i-destroy_project-21","(project)",""],["destroy_repository","Repository","Repository.html#method-i-destroy_repository","()",""],["destroyed?","StaticModel","StaticModel.html#method-i-destroyed-3F","()",""],["detect_encoding","Gitlab::Encode","Gitlab/Encode.html#method-i-detect_encoding","(message)",""],["determine_action","Event","Event.html#method-c-determine_action","(record)",""],["dev_access_for?","Authority","Authority.html#method-i-dev_access_for-3F","(user)",""],["dev_tools","ApplicationController","ApplicationController.html#method-i-dev_tools","()",""],["different_committer?","Commit","Commit.html#method-i-different_committer-3F","()","<p>Was this commit committed by a different person than the original author?\n"],["diffs","MergeRequest","MergeRequest.html#method-i-diffs","()",""],["diffs","MergeRequestsController","MergeRequestsController.html#method-i-diffs","()",""],["discover_default_branch","Repository","Repository.html#method-i-discover_default_branch","()","<p>Discovers the default branch based on the repository’s available branches\n<p>If no branches are present, …\n"],["downvote?","Note","Note.html#method-i-downvote-3F","()","<p>Returns true if this is a downvote note, otherwise false is returned\n"],["downvotes","Votes","Votes.html#method-i-downvotes","()","<p>Return the number of -1 comments (downvotes)\n"],["downvotes_in_percent","Votes","Votes.html#method-i-downvotes_in_percent","()",""],["each_diff_line","CommitsHelper","CommitsHelper.html#method-i-each_diff_line","(diff_arr, index)",""],["edit","Admin::GroupsController","Admin/GroupsController.html#method-i-edit","()",""],["edit","Admin::ProjectsController","Admin/ProjectsController.html#method-i-edit","()",""],["edit","Admin::TeamMembersController","Admin/TeamMembersController.html#method-i-edit","()",""],["edit","Admin::UsersController","Admin/UsersController.html#method-i-edit","()",""],["edit","IssuesController","IssuesController.html#method-i-edit","()",""],["edit","MergeRequestsController","MergeRequestsController.html#method-i-edit","()",""],["edit","MilestonesController","MilestonesController.html#method-i-edit","()",""],["edit","ProjectsController","ProjectsController.html#method-i-edit","()",""],["edit","SnippetsController","SnippetsController.html#method-i-edit","()",""],["edit","TreeController","TreeController.html#method-i-edit","()",""],["edit","WikisController","WikisController.html#method-i-edit","()",""],["emoji_autocomplete_source","ApplicationHelper","ApplicationHelper.html#method-i-emoji_autocomplete_source","()",""],["empty?","Tree","Tree.html#method-i-empty-3F","()",""],["empty_repo?","Repository","Repository.html#method-i-empty_repo-3F","()",""],["enable_automerge","Gitlab::Gitolite","Gitlab/Gitolite.html#method-i-enable_automerge","()",""],["error","Gitlab::Logger","Gitlab/Logger.html#method-c-error","(message)",""],["event_action_name","EventsHelper","EventsHelper.html#method-i-event_action_name","(event)",""],["event_image","EventsHelper","EventsHelper.html#method-i-event_image","(event)",""],["execute","CommitLoadContext","CommitLoadContext.html#method-i-execute","()",""],["execute","IssuesBulkUpdateContext","IssuesBulkUpdateContext.html#method-i-execute","()",""],["execute","IssuesListContext","IssuesListContext.html#method-i-execute","()",""],["execute","MergeRequestsLoadContext","MergeRequestsLoadContext.html#method-i-execute","()",""],["execute","Notes::CreateContext","Notes/CreateContext.html#method-i-execute","()",""],["execute","Notes::LoadContext","Notes/LoadContext.html#method-i-execute","()",""],["execute","SearchContext","SearchContext.html#method-i-execute","()",""],["execute","TestHookContext","TestHookContext.html#method-i-execute","()",""],["execute","WebHook","WebHook.html#method-i-execute","(data)",""],["execute_hooks","PushObserver","PushObserver.html#method-i-execute_hooks","(oldrev, newrev, ref, user)",""],["exists?","Gitlab::Satellite","Gitlab/Satellite.html#method-i-exists-3F","()",""],["expired?","Snippet","Snippet.html#method-i-expired-3F","()",""],["expires_at","Milestone","Milestone.html#method-i-expires_at","()",""],["extract_ref","ExtractsPath","ExtractsPath.html#method-i-extract_ref","(input)","<p>Given a string containing both a Git tree-ish, such as a branch or tag, and\na filesystem path joined …\n"],["failure_message","OmniauthCallbacksController","OmniauthCallbacksController.html#method-i-failure_message","()","<p>Extend the standard message generation to accept our custom exception\n"],["feed_summary","EventDecorator","EventDecorator.html#method-i-feed_summary","()",""],["feed_title","EventDecorator","EventDecorator.html#method-i-feed_title","()",""],["feed_url","EventDecorator","EventDecorator.html#method-i-feed_url","()",""],["file_name","Gitlab::AppLogger","Gitlab/AppLogger.html#method-c-file_name","()",""],["file_name","Gitlab::GitLogger","Gitlab/GitLogger.html#method-c-file_name","()",""],["files","ProjectsController","ProjectsController.html#method-i-files","()",""],["filter","User","User.html#method-c-filter","(filter_name)",""],["find_all_by_branch","MergeRequest","MergeRequest.html#method-c-find_all_by_branch","(branch_name)",""],["find_for_ldap_auth","Gitlab::Auth","Gitlab/Auth.html#method-i-find_for_ldap_auth","(auth, signed_in_resource = nil)",""],["find_for_ldap_auth","User","User.html#method-c-find_for_ldap_auth","(auth, signed_in_resource = nil)",""],["find_free_space","Gitlab::GraphCommit","Gitlab/GraphCommit.html#method-c-find_free_space","(time_range)",""],["find_or_first","Commit","Commit.html#method-c-find_or_first","(repo, commit_id = nil, root_ref)",""],["find_or_new_for_omniauth","Gitlab::Auth","Gitlab/Auth.html#method-i-find_or_new_for_omniauth","(auth)",""],["find_or_new_for_omniauth","User","User.html#method-c-find_or_new_for_omniauth","(auth)",""],["fingerprintable_key","Key","Key.html#method-i-fingerprintable_key","()",""],["first_name","Account","Account.html#method-i-first_name","()",""],["for_commit?","Note","Note.html#method-i-for_commit-3F","()",""],["for_diff_line?","Note","Note.html#method-i-for_diff_line-3F","()",""],["forbidden!","Gitlab::APIHelpers","Gitlab/APIHelpers.html#method-i-forbidden-21","()","<p>error helpers\n"],["format_message","Gitlab::AppLogger","Gitlab/AppLogger.html#method-i-format_message","(severity, timestamp, progname, msg)",""],["format_message","Gitlab::GitLogger","Gitlab/GitLogger.html#method-i-format_message","(severity, timestamp, progname, msg)",""],["fresh_commits","Commit","Commit.html#method-c-fresh_commits","(repo, n = 10)",""],["fresh_commits","Repository","Repository.html#method-i-fresh_commits","(n = 10)",""],["generate_password","User","User.html#method-i-generate_password","()",""],["gfm","Gitlab::Markdown","Gitlab/Markdown.html#method-i-gfm","(text, html_options = {})","<p>Public: Parse the provided text with GitLab-Flavored Markdown\n<p>text         - the source text html_options …\n"],["git_error?","Project","Project.html#method-i-git_error-3F","()",""],["git_host","GitHost","GitHost.html#method-i-git_host","()",""],["git_not_found!","ApplicationController","ApplicationController.html#method-i-git_not_found-21","()",""],["githost","ErrorsController","ErrorsController.html#method-i-githost","()",""],["gitlab_auth","User","User.html#method-c-gitlab_auth","()",""],["gitlab_markdown?","TreeHelper","TreeHelper.html#method-i-gitlab_markdown-3F","(filename)",""],["graph","ProjectsController","ProjectsController.html#method-i-graph","()",""],["gravatar_icon","ApplicationHelper","ApplicationHelper.html#method-i-gravatar_icon","(user_email = '', size = 40)",""],["group","GroupsController","GroupsController.html#method-i-group","()",""],["grouped_options_refs","ApplicationHelper","ApplicationHelper.html#method-i-grouped_options_refs","(destination = :tree)",""],["grouper_project_members","ProjectsHelper","ProjectsHelper.html#method-i-grouper_project_members","(project)",""],["guest_access_for?","Authority","Authority.html#method-i-guest_access_for-3F","(user)",""],["has_commits?","Repository","Repository.html#method-i-has_commits-3F","()",""],["has_post_receive_file?","Repository","Repository.html#method-i-has_post_receive_file-3F","()",""],["heads","Repository","Repository.html#method-i-heads","()",""],["help","FileSizeValidator","FileSizeValidator.html#method-i-help","()",""],["hexdigest","ApplicationHelper","ApplicationHelper.html#method-i-hexdigest","(string)",""],["history","ProfileController","ProfileController.html#method-i-history","()",""],["history","WikisController","WikisController.html#method-i-history","()",""],["http_url_to_repo","Repository","Repository.html#method-i-http_url_to_repo","()",""],["human_state","MergeRequest","MergeRequest.html#method-i-human_state","()",""],["identification_type","CommitsHelper","CommitsHelper.html#method-i-identification_type","(line)",""],["identifier","Account","Account.html#method-i-identifier","()","<p>Returns a string for use as a Gitolite user identifier\n<p>Note that Gitolite 2.x requires the following pattern …\n"],["image_diff_class","CommitsHelper","CommitsHelper.html#method-i-image_diff_class","(diff)",""],["import_team","UsersProject","UsersProject.html#method-c-import_team","(source_project, target_project)",""],["index","Admin::DashboardController","Admin/DashboardController.html#method-i-index","()",""],["index","Admin::GroupsController","Admin/GroupsController.html#method-i-index","()",""],["index","Admin::HooksController","Admin/HooksController.html#method-i-index","()",""],["index","Admin::ProjectsController","Admin/ProjectsController.html#method-i-index","()",""],["index","Admin::UsersController","Admin/UsersController.html#method-i-index","()",""],["index","CompareController","CompareController.html#method-i-index","()",""],["index","DashboardController","DashboardController.html#method-i-index","()",""],["index","DeployKeysController","DeployKeysController.html#method-i-index","()",""],["index","HelpController","HelpController.html#method-i-index","()",""],["index","HooksController","HooksController.html#method-i-index","()",""],["index","IssuesController","IssuesController.html#method-i-index","()",""],["index","KeysController","KeysController.html#method-i-index","()",""],["index","LabelsController","LabelsController.html#method-i-index","()",""],["index","MergeRequestsController","MergeRequestsController.html#method-i-index","()",""],["index","MilestonesController","MilestonesController.html#method-i-index","()",""],["index","NotesController","NotesController.html#method-i-index","()",""],["index","ProtectedBranchesController","ProtectedBranchesController.html#method-i-index","()",""],["index","SnippetsController","SnippetsController.html#method-i-index","()",""],["index","TeamMembersController","TeamMembersController.html#method-i-index","()",""],["index_commits","Gitlab::GraphCommit","Gitlab/GraphCommit.html#method-c-index_commits","(commits)","<p>Method is adding time and space on the list of commits. As well as returns\ndate list corelated with time …\n"],["info","Gitlab::Logger","Gitlab/Logger.html#method-c-info","(message)",""],["invalid?","Tree","Tree.html#method-i-invalid-3F","()",""],["is_admin?","Account","Account.html#method-i-is_admin-3F","()",""],["is_assigned?","IssueCommonality","IssueCommonality.html#method-i-is_assigned-3F","()",""],["is_being_closed?","IssueCommonality","IssueCommonality.html#method-i-is_being_closed-3F","()",""],["is_being_reassigned?","IssueCommonality","IssueCommonality.html#method-i-is_being_reassigned-3F","()",""],["is_being_reopened?","IssueCommonality","IssueCommonality.html#method-i-is_being_reopened-3F","()",""],["is_blob?","Tree","Tree.html#method-i-is_blob-3F","()",""],["is_deploy_key","Key","Key.html#method-i-is_deploy_key","()",""],["issue","Event","Event.html#method-i-issue","()",""],["issue","IssuesController","IssuesController.html#method-i-issue","()",""],["issue?","Event","Event.html#method-i-issue-3F","()",""],["issue_css_classes","IssuesHelper","IssuesHelper.html#method-i-issue_css_classes","(issue)",""],["issue_status_changed_email","Notify","Notify.html#method-i-issue_status_changed_email","(recipient_id, issue_id, status, updated_by_user_id)",""],["issue_tags","IssuesHelper","IssuesHelper.html#method-i-issue_tags","()",""],["issues","DashboardController","DashboardController.html#method-i-issues","()","<p>Get only assigned issues\n"],["issues","GroupsController","GroupsController.html#method-i-issues","()","<p>Get only assigned issues\n"],["issues_filter","IssuesHelper","IssuesHelper.html#method-i-issues_filter","()",""],["issues_filtered","IssuesController","IssuesController.html#method-i-issues_filtered","()",""],["issues_labels","Project","Project.html#method-i-issues_labels","()",""],["joined?","Event","Event.html#method-i-joined-3F","()",""],["last_activity","Project","Project.html#method-i-last_activity","()",""],["last_activity_date","Project","Project.html#method-i-last_activity_date","()",""],["last_activity_project","Account","Account.html#method-i-last_activity_project","()",""],["last_commit","ApplicationHelper","ApplicationHelper.html#method-i-last_commit","(project)",""],["last_commit","MergeRequest","MergeRequest.html#method-i-last_commit","()",""],["last_commit","PushEvent","PushEvent.html#method-i-last_commit","()",""],["last_commit_for","Repository","Repository.html#method-i-last_commit_for","(ref, path = nil)",""],["last_deploy?","Key","Key.html#method-i-last_deploy-3F","()",""],["last_push_to_non_root?","PushEvent","PushEvent.html#method-i-last_push_to_non_root-3F","()",""],["ldap","OmniauthCallbacksController","OmniauthCallbacksController.html#method-i-ldap","()",""],["ldap_enable?","ApplicationHelper","ApplicationHelper.html#method-i-ldap_enable-3F","()",""],["left?","Event","Event.html#method-i-left-3F","()",""],["lifetime_select_options","SnippetsHelper","SnippetsHelper.html#method-i-lifetime_select_options","()",""],["link_title","CommitDecorator","CommitDecorator.html#method-i-link_title","()","<p>Returns a string describing the commit for use in a link title\n<p>Example\n\n<pre>&quot;Commit: Alex Denisov - Project ...</pre>\n"],["link_to_author","EventsHelper","EventsHelper.html#method-i-link_to_author","(event)",""],["link_to_commit_diff_line_note","NotesHelper","NotesHelper.html#method-i-link_to_commit_diff_line_note","(note)",""],["link_to_gfm","GitlabMarkdownHelper","GitlabMarkdownHelper.html#method-i-link_to_gfm","(body, url, html_options = {})","<p>Use this in places where you would normally use link_to(gfm(…), …).\n<p>It solves a problem occurring …\n"],["link_to_issue_assignee","IssuesHelper","IssuesHelper.html#method-i-link_to_issue_assignee","(issue)",""],["link_to_issue_author","IssuesHelper","IssuesHelper.html#method-i-link_to_issue_author","(issue)",""],["link_to_merge_request_assignee","MergeRequestsHelper","MergeRequestsHelper.html#method-i-link_to_merge_request_assignee","(merge_request)",""],["link_to_merge_request_author","MergeRequestsHelper","MergeRequestsHelper.html#method-i-link_to_merge_request_author","(merge_request)",""],["link_to_project","ProjectsHelper","ProjectsHelper.html#method-i-link_to_project","(project)",""],["loading_more_notes?","NotesHelper","NotesHelper.html#method-i-loading_more_notes-3F","()",""],["loading_new_notes?","NotesHelper","NotesHelper.html#method-i-loading_new_notes-3F","()",""],["log","Gitlab::Auth","Gitlab/Auth.html#method-i-log","()",""],["log","Gitlab::GitoliteConfig","Gitlab/GitoliteConfig.html#method-i-log","(message)",""],["log_info","ProjectObserver","ProjectObserver.html#method-i-log_info","(message)",""],["log_info","UserObserver","UserObserver.html#method-i-log_info","(message)",""],["logs_tree","RefsController","RefsController.html#method-i-logs_tree","()",""],["mark_as_merged!","MergeRequest","MergeRequest.html#method-i-mark_as_merged-21","()",""],["mark_as_unchecked","MergeRequest","MergeRequest.html#method-i-mark_as_unchecked","()",""],["mark_as_unmergable","MergeRequest","MergeRequest.html#method-i-mark_as_unmergable","()",""],["mark_reserved","Gitlab::GraphCommit","Gitlab/GraphCommit.html#method-c-mark_reserved","(time_range, space)",""],["markdown","GitlabMarkdownHelper","GitlabMarkdownHelper.html#method-i-markdown","(text)",""],["markup?","TreeHelper","TreeHelper.html#method-i-markup-3F","(filename)","<p>Public: Determines if a given filename is compatible with GitHub::Markup.\n<p>filename - Filename string to …\n"],["master_access_for?","Authority","Authority.html#method-i-master_access_for-3F","(user)",""],["md_ref?","PushEvent","PushEvent.html#method-i-md_ref-3F","()",""],["membership_changed?","Event","Event.html#method-i-membership_changed-3F","()",""],["merge!","Gitlab::Merge","Gitlab/Merge.html#method-i-merge-21","()","<p>Merges the source branch into the target branch in the satellite and pushes\nit back to Gitolite. It also …\n"],["merge!","MergeRequest","MergeRequest.html#method-i-merge-21","(user_id)",""],["merge_event","MergeRequest","MergeRequest.html#method-i-merge_event","()",""],["merge_request","Event","Event.html#method-i-merge_request","()",""],["merge_request","MergeRequestsController","MergeRequestsController.html#method-i-merge_request","()",""],["merge_request?","Event","Event.html#method-i-merge_request-3F","()",""],["merge_requests","DashboardController","DashboardController.html#method-i-merge_requests","()","<p>Get authored or assigned open merge requests\n"],["merge_requests","GroupsController","GroupsController.html#method-i-merge_requests","()","<p>Get authored or assigned open merge requests\n"],["merged?","Event","Event.html#method-i-merged-3F","()",""],["merged?","MergeRequest","MergeRequest.html#method-i-merged-3F","()",""],["method_missing","ApplicationController","ApplicationController.html#method-i-method_missing","(method_sym, *arguments, &block)",""],["method_missing","Gitlab::GraphCommit","Gitlab/GraphCommit.html#method-i-method_missing","(m, *args, &block)",""],["milestone","MilestonesController","MilestonesController.html#method-i-milestone","()",""],["mode","Snippet","Snippet.html#method-i-mode","()",""],["module_enabled","IssuesController","IssuesController.html#method-i-module_enabled","()",""],["module_enabled","LabelsController","LabelsController.html#method-i-module_enabled","()",""],["module_enabled","MergeRequestsController","MergeRequestsController.html#method-i-module_enabled","()",""],["module_enabled","MilestonesController","MilestonesController.html#method-i-module_enabled","()",""],["mr_and_commit_notes","MergeRequest","MergeRequest.html#method-i-mr_and_commit_notes","()",""],["mr_css_classes","MergeRequestsHelper","MergeRequestsHelper.html#method-i-mr_css_classes","(mr)",""],["name","Snippet","Snippet.html#method-i-name","()",""],["nav_link","TabHelper","TabHelper.html#method-i-nav_link","(options = {}, &block)","<p>Navigation link helper\n<p>Returns an `li` element with an ‘active’ class if the supplied\ncontroller(s) and/or …\n"],["new","Admin::GroupsController","Admin/GroupsController.html#method-i-new","()",""],["new","Admin::ProjectsController","Admin/ProjectsController.html#method-i-new","()",""],["new","Admin::UsersController","Admin/UsersController.html#method-i-new","()",""],["new","BaseContext","BaseContext.html#method-c-new","(project, user, params)",""],["new","Commit","Commit.html#method-c-new","(raw_commit, head = nil)",""],["new","DeployKeysController","DeployKeysController.html#method-i-new","()",""],["new","FileSizeValidator","FileSizeValidator.html#method-c-new","(options)",""],["new","Gitlab::FileEditor","Gitlab/FileEditor.html#method-c-new","(user, project, ref)",""],["new","Gitlab::GraphCommit","Gitlab/GraphCommit.html#method-c-new","(commit)",""],["new","Gitlab::Merge","Gitlab/Merge.html#method-c-new","(merge_request, user)",""],["new","Gitlab::Satellite","Gitlab/Satellite.html#method-c-new","(project)",""],["new","IssuesController","IssuesController.html#method-i-new","()",""],["new","KeysController","KeysController.html#method-i-new","()",""],["new","MergeRequestsController","MergeRequestsController.html#method-i-new","()",""],["new","MilestonesController","MilestonesController.html#method-i-new","()",""],["new","ProjectsController","ProjectsController.html#method-i-new","()",""],["new","Redcarpet::Render::GitlabHTML","Redcarpet/Render/GitlabHTML.html#method-c-new","(template, options = {})",""],["new","SearchContext","SearchContext.html#method-c-new","(project_ids, params)",""],["new","SnippetsController","SnippetsController.html#method-i-new","()",""],["new","TeamMembersController","TeamMembersController.html#method-i-new","()",""],["new","Tree","Tree.html#method-c-new","(raw_tree, project, ref = nil, path = nil)",""],["new?","IssueCommonality","IssueCommonality.html#method-i-new-3F","()",""],["new_branch?","PushEvent","PushEvent.html#method-i-new_branch-3F","()",""],["new_issue?","Event","Event.html#method-i-new_issue-3F","()",""],["new_issue_email","Notify","Notify.html#method-i-new_issue_email","(issue_id)","<p>Issue\n"],["new_merge_request?","Event","Event.html#method-i-new_merge_request-3F","()",""],["new_merge_request_email","Notify","Notify.html#method-i-new_merge_request_email","(merge_request_id)","<p>Merge Request\n"],["new_mr_path_from_push_event","MergeRequestsHelper","MergeRequestsHelper.html#method-i-new_mr_path_from_push_event","(event)",""],["new_record?","StaticModel","StaticModel.html#method-i-new_record-3F","()",""],["new_ref?","PushEvent","PushEvent.html#method-i-new_ref-3F","()",""],["new_user_email","Notify","Notify.html#method-i-new_user_email","(user_id, password)","<p>User\n"],["no_cache_headers","ApplicationController","ApplicationController.html#method-i-no_cache_headers","()",""],["no_commit_message","CommitDecorator","CommitDecorator.html#method-i-no_commit_message","()",""],["not_allowed!","Gitlab::APIHelpers","Gitlab/APIHelpers.html#method-i-not_allowed-21","()",""],["not_found!","ApplicationController","ApplicationController.html#method-i-not_found-21","()",""],["not_found!","Gitlab::APIHelpers","Gitlab/APIHelpers.html#method-i-not_found-21","(resource = nil)",""],["note_commit_email","Notify","Notify.html#method-i-note_commit_email","(recipient_id, note_id)","<p>Note\n"],["note_for_main_target?","NotesHelper","NotesHelper.html#method-i-note_for_main_target-3F","(note)","<p>Helps to distinguish e.g. commit notes in mr notes list\n"],["note_issue_email","Notify","Notify.html#method-i-note_issue_email","(recipient_id, note_id)",""],["note_merge_request_email","Notify","Notify.html#method-i-note_merge_request_email","(recipient_id, note_id)",""],["note_wall_email","Notify","Notify.html#method-i-note_wall_email","(recipient_id, note_id)",""],["note_wiki_email","Notify","Notify.html#method-i-note_wiki_email","(recipient_id, note_id)",""],["noteable","Note","Note.html#method-i-noteable","()","<p>override to return commits, which are not active record\n"],["notes","NotesController","NotesController.html#method-i-notes","()",""],["notify_only_author?","Note","Note.html#method-i-notify_only_author-3F","(user)","<p>Check if we can notify commit author with email about our comment\n<p>If commit author email exist in project …\n"],["notify_team","NoteObserver","NoteObserver.html#method-i-notify_team","(note)","<p>Notifies the whole team except the author of note\n"],["oauth_active_class","ProfileHelper","ProfileHelper.html#method-i-oauth_active_class","(provider)",""],["observe_push","PushObserver","PushObserver.html#method-i-observe_push","(oldrev, newrev, ref, user)",""],["open?","MergeRequest","MergeRequest.html#method-i-open-3F","()",""],["open_branches","Repository","Repository.html#method-i-open_branches","()",""],["open_for","Issue","Issue.html#method-c-open_for","(user)",""],["pages","WikisController","WikisController.html#method-i-pages","()",""],["paginate","Gitlab::APIHelpers","Gitlab/APIHelpers.html#method-i-paginate","(object)",""],["parent_commit","PushEvent","PushEvent.html#method-i-parent_commit","()",""],["parents_count","Commit","Commit.html#method-i-parents_count","()",""],["participants","Milestone","Milestone.html#method-i-participants","()",""],["password_update","ProfileController","ProfileController.html#method-i-password_update","()",""],["path","Gitlab::Satellite","Gitlab/Satellite.html#method-i-path","()",""],["path_to_repo","Repository","Repository.html#method-i-path_to_repo","()",""],["people","GroupsController","GroupsController.html#method-i-people","()",""],["percent_complete","Milestone","Milestone.html#method-i-percent_complete","()",""],["perform","PostReceive","PostReceive.html#method-c-perform","(reponame, oldrev, newrev, ref, identifier)",""],["perform","SystemHookWorker","SystemHookWorker.html#method-c-perform","(hook_id, data)",""],["persisted?","StaticModel","StaticModel.html#method-i-persisted-3F","()",""],["place_chain","Gitlab::GraphCommit","Gitlab/GraphCommit.html#method-c-place_chain","(commit, map, parent_time = nil)","<p>Add space mark on commit and its parents\n<p>@param [GraphCommit] the commit object. @param [Hash&lt;String …\n"],["plain_text_readme?","TreeHelper","TreeHelper.html#method-i-plain_text_readme-3F","(filename)",""],["post_receive_data","PushObserver","PushObserver.html#method-i-post_receive_data","(oldrev, newrev, ref, user)",""],["postprocess","Redcarpet::Render::GitlabHTML","Redcarpet/Render/GitlabHTML.html#method-i-postprocess","(full_document)",""],["prev_commit","Commit","Commit.html#method-i-prev_commit","()",""],["prev_commit_id","Commit","Commit.html#method-i-prev_commit_id","()",""],["preview","NotesController","NotesController.html#method-i-preview","()",""],["primary_key","StaticModel::ClassMethods","StaticModel/ClassMethods.html#method-i-primary_key","()","<p>Used by ActiveRecord’s polymorphic association to set object_id\n"],["private?","Project","Project.html#method-i-private-3F","()",""],["probably_merged?","MergeRequest","MergeRequest.html#method-i-probably_merged-3F","()",""],["processing","Gitlab::InlineDiff","Gitlab/InlineDiff.html#method-c-processing","(diff_arr)",""],["project","ApplicationController","ApplicationController.html#method-i-project","()",""],["project_abilities","Ability","Ability.html#method-c-project_abilities","(user, project)",""],["project_access_granted_email","Notify","Notify.html#method-i-project_access_granted_email","(user_project_id)","<p>Project\n"],["project_access_human","UsersProject","UsersProject.html#method-i-project_access_human","()",""],["project_id","Project","Project.html#method-i-project_id","()",""],["project_ids","Account","Account.html#method-i-project_ids","()",""],["project_ids","GroupsController","GroupsController.html#method-i-project_ids","()",""],["project_issues_filter_path","IssuesHelper","IssuesHelper.html#method-i-project_issues_filter_path","(project, params = {})",""],["project_last_activity","ApplicationHelper","ApplicationHelper.html#method-i-project_last_activity","(project)",""],["project_name","Event","Event.html#method-i-project_name","()",""],["project_tab_class","TabHelper","TabHelper.html#method-i-project_tab_class","()",""],["project_update","Admin::GroupsController","Admin/GroupsController.html#method-i-project_update","()",""],["projects","GroupsController","GroupsController.html#method-i-projects","()",""],["projects","Key","Key.html#method-i-projects","()","<p>projects that has this key\n"],["projects_limit_percent","Account","Account.html#method-i-projects_limit_percent","()",""],["projects_with_events","Account","Account.html#method-i-projects_with_events","()",""],["protected_branch?","Repository","Repository.html#method-i-protected_branch-3F","(branch_name)","<p>Check if current branch name is marked as protected in the system\n"],["public?","Project","Project.html#method-i-public-3F","()",""],["push?","Event","Event.html#method-i-push-3F","()",""],["push_action_name","PushEvent","PushEvent.html#method-i-push_action_name","()",""],["push_with_commits?","PushEvent","PushEvent.html#method-i-push_with_commits-3F","()",""],["raw","MergeRequestsController","MergeRequestsController.html#method-i-raw","()",""],["raw","SnippetsController","SnippetsController.html#method-i-raw","()",""],["read_latest","Gitlab::Logger","Gitlab/Logger.html#method-c-read_latest","()",""],["readme","TreeDecorator","TreeDecorator.html#method-i-readme","()",""],["reassigned_issue_email","Notify","Notify.html#method-i-reassigned_issue_email","(recipient_id, issue_id, previous_assignee_id)",""],["reassigned_merge_request_email","Notify","Notify.html#method-i-reassigned_merge_request_email","(recipient_id, merge_request_id, previous_assignee_id)",""],["recent_push","Account","Account.html#method-i-recent_push","(project_id = nil)",""],["ref","RefsController","RefsController.html#method-i-ref","()",""],["ref_name","PushEvent","PushEvent.html#method-i-ref_name","()",""],["ref_names","Repository","Repository.html#method-i-ref_names","()","<p>Returns an Array of branch and tag names\n"],["ref_type","PushEvent","PushEvent.html#method-i-ref_type","()",""],["regenerate_from","Wiki","Wiki.html#method-c-regenerate_from","(wiki)",""],["reject_blocked!","ApplicationController","ApplicationController.html#method-i-reject_blocked-21","()",""],["reload_code","MergeRequest","MergeRequest.html#method-i-reload_code","()",""],["reloaded_commits","MergeRequest","MergeRequest.html#method-i-reloaded_commits","()",""],["reloaded_diffs","MergeRequest","MergeRequest.html#method-i-reloaded_diffs","()",""],["remove_from_team_message","ProjectsHelper","ProjectsHelper.html#method-i-remove_from_team_message","(project, member)",""],["remove_key","Gitlab::Gitolite","Gitlab/Gitolite.html#method-i-remove_key","(key_id, projects)",""],["remove_project","Admin::GroupsController","Admin/GroupsController.html#method-i-remove_project","()",""],["remove_repository","Gitlab::Gitolite","Gitlab/Gitolite.html#method-i-remove_repository","(project)",""],["render_404","ApplicationController","ApplicationController.html#method-i-render_404","()",""],["render_api_error!","Gitlab::APIHelpers","Gitlab/APIHelpers.html#method-i-render_api_error-21","(message, status)",""],["render_tree","TreeHelper","TreeHelper.html#method-i-render_tree","(contents)","<p>Sorts a repository’s tree so that folders are before files and renders\ntheir corresponding partials\n<p>contents …\n"],["reopened?","Event","Event.html#method-i-reopened-3F","()",""],["replace_markers","Gitlab::InlineDiff","Gitlab/InlineDiff.html#method-c-replace_markers","(line)",""],["repo","Repository","Repository.html#method-i-repo","()",""],["repo_access_human","UsersProject","UsersProject.html#method-i-repo_access_human","()",""],["repo_exists?","Repository","Repository.html#method-i-repo_exists-3F","()",""],["repo_name","Project","Project.html#method-i-repo_name","()",""],["report_access_for?","Authority","Authority.html#method-i-report_access_for-3F","(user)",""],["repository_masters","Authority","Authority.html#method-i-repository_masters","()",""],["repository_readers","Authority","Authority.html#method-i-repository_readers","()",""],["repository_writers","Authority","Authority.html#method-i-repository_writers","()",""],["request_protocol","ApplicationHelper","ApplicationHelper.html#method-i-request_protocol","()",""],["require_non_empty_project","ApplicationController","ApplicationController.html#method-i-require_non_empty_project","()",""],["require_ssh_key?","Account","Account.html#method-i-require_ssh_key-3F","()",""],["reset_access","Authority","Authority.html#method-i-reset_access","(user)",""],["reset_private_token","ProfileController","ProfileController.html#method-i-reset_private_token","()",""],["result","SearchContext","SearchContext.html#method-i-result","()",""],["rm_key","Gitlab::GitoliteConfig","Gitlab/GitoliteConfig.html#method-i-rm_key","(user)",""],["rm_ref?","PushEvent","PushEvent.html#method-i-rm_ref-3F","()",""],["role_access","UsersProject","UsersProject.html#method-i-role_access","()",""],["root_ref","Repository","Repository.html#method-i-root_ref","()",""],["root_ref?","Repository","Repository.html#method-i-root_ref-3F","(branch)",""],["safe_message","Commit","Commit.html#method-i-safe_message","()",""],["satellite","Repository","Repository.html#method-i-satellite","()",""],["saved?","Project","Project.html#method-i-saved-3F","()",""],["search","Group","Group.html#method-c-search","(query)",""],["search","GroupsController","GroupsController.html#method-i-search","()",""],["search","IssueCommonality::ClassMethods","IssueCommonality/ClassMethods.html#method-i-search","(query)",""],["search","IssuesController","IssuesController.html#method-i-search","()",""],["search","Project","Project.html#method-c-search","(query)",""],["search","User","User.html#method-c-search","(query)",""],["search_autocomplete_source","ApplicationHelper","ApplicationHelper.html#method-i-search_autocomplete_source","()",""],["send_notify_mails","NoteObserver","NoteObserver.html#method-i-send_notify_mails","(note)",""],["send_reassigned_email","IssueObserver","IssueObserver.html#method-i-send_reassigned_email","(issue)",""],["send_reassigned_email","MergeRequestObserver","MergeRequestObserver.html#method-i-send_reassigned_email","(merge_request)",""],["set_current_user_for_observers","ApplicationController","ApplicationController.html#method-i-set_current_user_for_observers","()",""],["set_identifier","Key","Key.html#method-i-set_identifier","()",""],["set_key","Gitlab::Gitolite","Gitlab/Gitolite.html#method-i-set_key","(key_id, key_content, projects)",""],["set_slug","Wiki","Wiki.html#method-i-set_slug","()",""],["short_id","Commit","Commit.html#method-i-short_id","(length = 10)",""],["show","Admin::GroupsController","Admin/GroupsController.html#method-i-show","()",""],["show","Admin::ProjectsController","Admin/ProjectsController.html#method-i-show","()",""],["show","Admin::ResqueController","Admin/ResqueController.html#method-i-show","()",""],["show","Admin::UsersController","Admin/UsersController.html#method-i-show","()",""],["show","BlameController","BlameController.html#method-i-show","()",""],["show","BlobController","BlobController.html#method-i-show","()",""],["show","CommitController","CommitController.html#method-i-show","()",""],["show","CommitsController","CommitsController.html#method-i-show","()",""],["show","CompareController","CompareController.html#method-i-show","()",""],["show","DeployKeysController","DeployKeysController.html#method-i-show","()",""],["show","GroupsController","GroupsController.html#method-i-show","()",""],["show","IssuesController","IssuesController.html#method-i-show","()",""],["show","KeysController","KeysController.html#method-i-show","()",""],["show","MergeRequestsController","MergeRequestsController.html#method-i-show","()",""],["show","MilestonesController","MilestonesController.html#method-i-show","()",""],["show","ProfileController","ProfileController.html#method-i-show","()",""],["show","ProjectsController","ProjectsController.html#method-i-show","()",""],["show","RepositoriesController","RepositoriesController.html#method-i-show","()",""],["show","SearchController","SearchController.html#method-i-show","()",""],["show","SnippetsController","SnippetsController.html#method-i-show","()",""],["show","TeamMembersController","TeamMembersController.html#method-i-show","()",""],["show","TreeController","TreeController.html#method-i-show","()",""],["show","WikisController","WikisController.html#method-i-show","()",""],["show_last_push_widget?","ApplicationHelper","ApplicationHelper.html#method-i-show_last_push_widget-3F","(event)",""],["size","Snippet","Snippet.html#method-i-size","()",""],["snippet","SnippetsController","SnippetsController.html#method-i-snippet","()",""],["sort","IssuesController","IssuesController.html#method-i-sort","()",""],["ssh_url_to_repo","Repository","Repository.html#method-i-ssh_url_to_repo","()",""],["store_dir","AttachmentUploader","AttachmentUploader.html#method-i-store_dir","()","<p>Override the directory where uploaded files will be stored. This is a\nsensible default for uploaders …\n"],["strip_white_space","Key","Key.html#method-i-strip_white_space","()",""],["switch","RefsController","RefsController.html#method-i-switch","()",""],["tag?","PushEvent","PushEvent.html#method-i-tag-3F","()",""],["tag_list","TagsHelper","TagsHelper.html#method-i-tag_list","(project)",""],["tag_name","PushEvent","PushEvent.html#method-i-tag_name","()",""],["tag_names","Repository","Repository.html#method-i-tag_names","()","<p>Returns an Array of tag names\n"],["tag_path","TagsHelper","TagsHelper.html#method-i-tag_path","(tag)",""],["tags","RepositoriesController","RepositoriesController.html#method-i-tags","()",""],["tags","Repository","Repository.html#method-i-tags","()","<p>Returns an Array of Tags\n"],["take_left_leaves","Gitlab::GraphCommit","Gitlab/GraphCommit.html#method-c-take_left_leaves","(commit, map)","<p>Takes most left subtree branch of commits which don’t have space mark yet.\n<p>@param [GraphCommit] the commit …\n"],["target_title","Event","Event.html#method-i-target_title","()",""],["team_member_by_id","Team","Team.html#method-i-team_member_by_id","(user_id)","<p>Get Team Member record by user id\n"],["team_member_by_name_or_email","Team","Team.html#method-i-team_member_by_name_or_email","(name = nil, email = nil)",""],["team_update","Admin::ProjectsController","Admin/ProjectsController.html#method-i-team_update","()",""],["team_update","Admin::UsersController","Admin/UsersController.html#method-i-team_update","()",""],["team_without_note_author","NoteObserver","NoteObserver.html#method-i-team_without_note_author","(note)",""],["test","Admin::HooksController","Admin/HooksController.html#method-i-test","()",""],["test","HooksController","HooksController.html#method-i-test","()",""],["title","CommitDecorator","CommitDecorator.html#method-i-title","()","<p>Returns the commits title.\n<p>Usually, the commit title is the first line of the commit message. In case\n…\n"],["to_graph","Gitlab::GraphCommit","Gitlab/GraphCommit.html#method-c-to_graph","(project)",""],["to_graph_hash","Gitlab::GraphCommit","Gitlab/GraphCommit.html#method-i-to_graph_hash","()",""],["to_param","Group","Group.html#method-i-to_param","()",""],["to_param","Project","Project.html#method-i-to_param","()",""],["to_param","StaticModel","StaticModel.html#method-i-to_param","()",""],["to_param","Wiki","Wiki.html#method-i-to_param","()",""],["to_raw","MergeRequest","MergeRequest.html#method-i-to_raw","()",""],["today?","IssueCommonality","IssueCommonality.html#method-i-today-3F","()",""],["token","ProfileController","ProfileController.html#method-i-token","()",""],["tree","Repository","Repository.html#method-i-tree","(fcommit, path = nil)",""],["tree_hex_class","TreeHelper","TreeHelper.html#method-i-tree_hex_class","(content)",""],["tree_icon","TreeHelper","TreeHelper.html#method-i-tree_icon","(type)","<p>Return an image icon depending on the file type\n<p>type - String type of the tree item; either ‘folder’ or …\n"],["tree_join","TreeHelper","TreeHelper.html#method-i-tree_join","(*args)","<p>Simple shortcut to File.join\n"],["trigger_post_receive","PushObserver","PushObserver.html#method-i-trigger_post_receive","(oldrev, newrev, ref, user)","<p>This method will be called after each post receive and only if the provided\nuser is present in GitLab …\n"],["unassigned_filter","IssuesHelper","IssuesHelper.html#method-i-unassigned_filter","()","<p>Returns an OpenStruct object suitable for use by\n<code>options_from_collection_for_select</code> to allow filtering …\n"],["unauthorized!","Gitlab::APIHelpers","Gitlab/APIHelpers.html#method-i-unauthorized-21","()",""],["unblock","Admin::UsersController","Admin/UsersController.html#method-i-unblock","()",""],["unchecked?","MergeRequest","MergeRequest.html#method-i-unchecked-3F","()",""],["unique_key","Key","Key.html#method-i-unique_key","()",""],["unmerged_commits","MergeRequest","MergeRequest.html#method-i-unmerged_commits","()",""],["unmerged_diffs","MergeRequest","MergeRequest.html#method-i-unmerged_diffs","()",""],["up_dir?","TreeDecorator","TreeDecorator.html#method-i-up_dir-3F","()",""],["up_dir_path","TreeDecorator","TreeDecorator.html#method-i-up_dir_path","()",""],["update","Admin::GroupsController","Admin/GroupsController.html#method-i-update","()",""],["update","Admin::ProjectsController","Admin/ProjectsController.html#method-i-update","()",""],["update","Admin::TeamMembersController","Admin/TeamMembersController.html#method-i-update","()",""],["update","Admin::UsersController","Admin/UsersController.html#method-i-update","()",""],["update","Gitlab::FileEditor","Gitlab/FileEditor.html#method-i-update","(path, content, commit_message, last_commit)",""],["update","IssuesController","IssuesController.html#method-i-update","()",""],["update","MergeRequestsController","MergeRequestsController.html#method-i-update","()",""],["update","MilestonesController","MilestonesController.html#method-i-update","()",""],["update","ProfileController","ProfileController.html#method-i-update","()",""],["update","ProjectsController","ProjectsController.html#method-i-update","()",""],["update","SnippetsController","SnippetsController.html#method-i-update","()",""],["update","TeamMembersController","TeamMembersController.html#method-i-update","()",""],["update","TreeController","TreeController.html#method-i-update","()",""],["update_merge_requests","PushObserver","PushObserver.html#method-i-update_merge_requests","(oldrev, newrev, ref, user)",""],["update_project","Gitlab::GitoliteConfig","Gitlab/GitoliteConfig.html#method-i-update_project","(repo_name, project)","<p>update or create\n"],["update_project!","Gitlab::GitoliteConfig","Gitlab/GitoliteConfig.html#method-i-update_project-21","(repo_name, project)",""],["update_project_config","Gitlab::GitoliteConfig","Gitlab/GitoliteConfig.html#method-i-update_project_config","(project, conf)",""],["update_projects","Gitlab::GitoliteConfig","Gitlab/GitoliteConfig.html#method-i-update_projects","(projects)","<p>Updates many projects and uses project.path as the repo path An order of\nmagnitude faster than update_project …\n"],["update_repository","Gitlab::Gitolite","Gitlab/Gitolite.html#method-i-update_repository","(project)",""],["update_repository","ProtectedBranch","ProtectedBranch.html#method-i-update_repository","()",""],["update_repository","Repository","Repository.html#method-i-update_repository","()",""],["update_repository","UsersProject","UsersProject.html#method-i-update_repository","()",""],["update_users_ids_to_role","Team","Team.html#method-i-update_users_ids_to_role","(users_ids, access_role)","<p>Update multiple project users to same access role by user ids\n"],["upvote?","Note","Note.html#method-i-upvote-3F","()","<p>Returns true if this is an upvote note, otherwise false is returned\n"],["upvotes","Votes","Votes.html#method-i-upvotes","()","<p>Return the number of +1 comments (upvotes)\n"],["upvotes_in_percent","Votes","Votes.html#method-i-upvotes_in_percent","()",""],["url_to_repo","Gitlab::Gitolite","Gitlab/Gitolite.html#method-i-url_to_repo","(path)",""],["url_to_repo","Repository","Repository.html#method-i-url_to_repo","()",""],["user_bulk_import","UsersProject","UsersProject.html#method-c-user_bulk_import","(user, project_ids, project_access)",""],["user_project","Gitlab::APIHelpers","Gitlab/APIHelpers.html#method-i-user_project","()",""],["users","Group","Group.html#method-i-users","()",""],["utf8","Gitlab::Encode","Gitlab/Encode.html#method-i-utf8","(message)",""],["valid?","Grack::Auth","Grack/Auth.html#method-i-valid-3F","()",""],["valid_diffs?","MergeRequest","MergeRequest.html#method-i-valid_diffs-3F","()",""],["valid_push?","PushEvent","PushEvent.html#method-i-valid_push-3F","()",""],["valid_repo?","Repository","Repository.html#method-i-valid_repo-3F","()",""],["validate_branches","MergeRequest","MergeRequest.html#method-i-validate_branches","()",""],["validate_each","FileSizeValidator","FileSizeValidator.html#method-i-validate_each","(record, attribute, value)",""],["validate_get_request","Grack::Auth","Grack/Auth.html#method-i-validate_get_request","()",""],["validate_post_request","Grack::Auth","Grack/Auth.html#method-i-validate_post_request","()",""],["validates_merge_request","MergeRequestsController","MergeRequestsController.html#method-i-validates_merge_request","()",""],["votes_count","Votes","Votes.html#method-i-votes_count","()","<p>Return the total number of votes\n"],["wall","ProjectsController","ProjectsController.html#method-i-wall","()","<p>Wall\n"],["web_app_url","ApplicationHelper","ApplicationHelper.html#method-i-web_app_url","()",""],["web_url","Project","Project.html#method-i-web_url","()",""],["wiki_notes","Project","Project.html#method-i-wiki_notes","()",""],["without_projects","User","User.html#method-c-without_projects","()",""],["without_repository_callback","UsersProject","UsersProject.html#method-c-without_repository_callback","()",""],["write_key","Gitlab::GitoliteConfig","Gitlab/GitoliteConfig.html#method-i-write_key","(id, key)",""],["README_FOR_APP","","doc/README_FOR_APP.html","","<p>Use this README file to introduce your application and point to useful\nplaces in the API for learning …\n"]]}}